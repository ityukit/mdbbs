{"version":3,"file":"tree.jquery.debug.js","sources":["src/dataLoader.ts","src/util.ts","src/dragAndDropHandler/binarySearch.ts","src/dragAndDropHandler/dragElement.ts","src/dragAndDropHandler/iterateVisibleNodes.ts","src/dragAndDropHandler/generateHitAreas.ts","src/dragAndDropHandler/index.ts","src/elementsRenderer.ts","src/keyHandler.ts","src/mouseUtils.ts","src/mouseHandler.ts","src/nodeUtils.ts","src/node.ts","src/nodeElement/borderDropHint.ts","src/nodeElement/ghostDropHint.ts","src/nodeElement/index.ts","src/nodeElement/folderElement.ts","src/saveStateHandler.ts","src/scrollHandler/scrollParent.ts","src/scrollHandler/containerScrollParent.ts","src/scrollHandler/documentScrollParent.ts","src/scrollHandler/createScrollParent.ts","src/scrollHandler.ts","src/selectNodeHandler.ts","src/simple.widget.ts","src/version.ts","src/tree.jquery.ts"],"sourcesContent":["import { LoadData, TriggerEvent } from \"./jqtreeMethodTypes\";\nimport { DataFilter, OnLoadFailed, OnLoading } from \"./jqtreeOptions\";\nimport { Node } from \"./node\";\n\nexport type HandleFinishedLoading = () => void;\n\ninterface DataLoaderParams {\n    dataFilter?: DataFilter;\n    loadData: LoadData;\n    onLoadFailed?: OnLoadFailed;\n    onLoading?: OnLoading;\n    treeElement: HTMLElement;\n    triggerEvent: TriggerEvent;\n}\n\nexport default class DataLoader {\n    private dataFilter?: DataFilter;\n    private loadData: LoadData;\n    private onLoadFailed?: OnLoadFailed;\n    private onLoading?: OnLoading;\n    private treeElement: HTMLElement;\n    private triggerEvent: TriggerEvent;\n\n    constructor({\n        dataFilter,\n        loadData,\n        onLoadFailed,\n        onLoading,\n        treeElement,\n        triggerEvent,\n    }: DataLoaderParams) {\n        this.dataFilter = dataFilter;\n        this.loadData = loadData;\n        this.onLoadFailed = onLoadFailed;\n        this.onLoading = onLoading;\n        this.treeElement = treeElement;\n        this.triggerEvent = triggerEvent;\n    }\n\n    public loadFromUrl(\n        urlInfo: JQuery.AjaxSettings | null | string,\n        parentNode: Node | null,\n        onFinished: HandleFinishedLoading | null,\n    ): void {\n        if (!urlInfo) {\n            return;\n        }\n\n        const element = this.getDomElement(parentNode);\n        this.addLoadingClass(element);\n        this.notifyLoading(true, parentNode, element);\n\n        const stopLoading = (): void => {\n            this.removeLoadingClass(element);\n            this.notifyLoading(false, parentNode, element);\n        };\n\n        const handleSuccess = (data: NodeData[] | string): void => {\n            stopLoading();\n            this.loadData(this.parseData(data), parentNode);\n\n            if (onFinished && typeof onFinished === \"function\") {\n                onFinished();\n            }\n        };\n\n        const handleError = (jqXHR: JQuery.jqXHR): void => {\n            stopLoading();\n\n            if (this.onLoadFailed) {\n                this.onLoadFailed(jqXHR);\n            }\n        };\n\n        this.submitRequest(urlInfo, handleSuccess, handleError);\n    }\n\n    private addLoadingClass(element: HTMLElement): void {\n        element.classList.add(\"jqtree-loading\");\n    }\n\n    private getDomElement(parentNode: Node | null): HTMLElement {\n        if (parentNode?.element) {\n            return parentNode.element;\n        } else {\n            return this.treeElement;\n        }\n    }\n\n    private notifyLoading(\n        isLoading: boolean,\n        node: Node | null,\n        element: HTMLElement,\n    ): void {\n        const $el = jQuery(element);\n\n        if (this.onLoading) {\n            this.onLoading(isLoading, node, $el);\n        }\n\n        this.triggerEvent(\"tree.loading_data\", {\n            $el,\n            isLoading,\n            node,\n        });\n    }\n\n    private parseData(data: NodeData[] | string): NodeData[] {\n        const getParsedData = () => {\n            if (typeof data === \"string\") {\n                return JSON.parse(data) as NodeData[];\n            } else {\n                return data;\n            }\n        };\n\n        const parsedData = getParsedData();\n\n        if (this.dataFilter) {\n            return this.dataFilter(parsedData);\n        } else {\n            return parsedData;\n        }\n    }\n\n    private removeLoadingClass(element: HTMLElement): void {\n        element.classList.remove(\"jqtree-loading\");\n    }\n\n    private submitRequest(\n        urlInfoInput: JQuery.AjaxSettings | string,\n        handleSuccess: JQuery.Ajax.SuccessCallback<any>,\n        handleError: JQuery.Ajax.ErrorCallback<any>,\n    ): void {\n        const urlInfo =\n            typeof urlInfoInput === \"string\"\n                ? { url: urlInfoInput }\n                : urlInfoInput;\n\n        const ajaxSettings: JQuery.AjaxSettings = {\n            cache: false,\n            dataType: \"json\",\n            error: handleError,\n            method: \"GET\",\n            success: handleSuccess,\n            ...urlInfo,\n        };\n\n        ajaxSettings.method = ajaxSettings.method?.toUpperCase() ?? \"GET\";\n\n        void jQuery.ajax(ajaxSettings);\n    }\n}\n","export const isInt = (n: unknown): boolean =>\n    typeof n === \"number\" && n % 1 === 0;\n\nexport const isFunction = (v: unknown): boolean => typeof v === \"function\";\n\nexport const getBoolString = (value: unknown): string =>\n    value ? \"true\" : \"false\";\n\nexport const getOffsetTop = (element: HTMLElement) =>\n    getElementPosition(element).top;\n\nexport const getElementPosition = (element: HTMLElement) => {\n    const rect = element.getBoundingClientRect();\n\n    return {\n        left: rect.x + window.scrollX,\n        top: rect.y + window.scrollY,\n    };\n};\n","function binarySearch<T>(items: T[], compareFn: (a: T) => number): null | T {\n    let low = 0;\n    let high = items.length;\n\n    while (low < high) {\n        const mid = (low + high) >> 1;\n        const item = items[mid];\n\n        if (item === undefined) {\n            return null;\n        }\n\n        const compareResult = compareFn(item);\n\n        if (compareResult > 0) {\n            high = mid;\n        } else if (compareResult < 0) {\n            low = mid + 1;\n        } else {\n            return item;\n        }\n    }\n\n    return null;\n}\n\nexport default binarySearch;\n","interface DragElementParams {\n    autoEscape: boolean;\n    nodeName: string;\n    offsetX: number;\n    offsetY: number;\n    treeElement: HTMLElement;\n}\n\nclass DragElement {\n    private element: HTMLElement;\n    private offsetX: number;\n    private offsetY: number;\n\n    constructor({\n        autoEscape,\n        nodeName,\n        offsetX,\n        offsetY,\n        treeElement,\n    }: DragElementParams) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n\n        this.element = this.createElement(nodeName, autoEscape);\n\n        treeElement.appendChild(this.element);\n    }\n\n    public move(pageX: number, pageY: number): void {\n        this.element.style.left = `${pageX - this.offsetX}px`;\n        this.element.style.top = `${pageY - this.offsetY}px`;\n    }\n\n    public remove(): void {\n        this.element.remove();\n    }\n\n    private createElement(nodeName: string, autoEscape: boolean) {\n        const element = document.createElement(\"span\");\n        element.classList.add(\"jqtree-title\", \"jqtree-dragging\");\n\n        if (autoEscape) {\n            element.textContent = nodeName;\n        } else {\n            element.innerHTML = nodeName;\n        }\n\n        element.style.position = \"absolute\";\n\n        return element;\n    }\n}\n\nexport default DragElement;\n","import { Node } from \"../node\";\n\ninterface Options {\n    handleAfterOpenFolder: (node: Node, nextNode: Node | null) => void;\n    handleClosedFolder: (\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ) => void;\n    handleFirstNode: (node: Node) => void;\n    handleNode: (\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ) => void;\n\n    /*\n    override\n    return\n        - true: continue iterating\n        - false: stop iterating\n    */\n    handleOpenFolder: (node: Node, element: HTMLElement) => boolean;\n}\n\nconst iterateVisibleNodes = (\n    tree: Node,\n    {\n        handleAfterOpenFolder,\n        handleClosedFolder,\n        handleFirstNode,\n        handleNode,\n        handleOpenFolder,\n    }: Options,\n) => {\n    let isFirstNode = true;\n\n    const iterate = (node: Node, nextNode: Node | null): void => {\n        let mustIterateInside =\n            (node.is_open || !node.element) && node.hasChildren();\n\n        let element: HTMLElement | null = null;\n\n        // Is the element visible?\n        if (node.element?.offsetParent) {\n            element = node.element;\n\n            if (isFirstNode) {\n                handleFirstNode(node);\n                isFirstNode = false;\n            }\n\n            if (!node.hasChildren()) {\n                handleNode(node, nextNode, node.element);\n            } else if (node.is_open) {\n                if (!handleOpenFolder(node, node.element)) {\n                    mustIterateInside = false;\n                }\n            } else {\n                handleClosedFolder(node, nextNode, element);\n            }\n        }\n\n        if (mustIterateInside) {\n            const childrenLength = node.children.length;\n            node.children.forEach((_, i) => {\n                const child = node.children[i];\n\n                if (child) {\n                    if (i === childrenLength - 1) {\n                        iterate(child, null);\n                    } else {\n                        const nextChild = node.children[i + 1];\n\n                        if (nextChild) {\n                            iterate(child, nextChild);\n                        }\n                    }\n                }\n            });\n\n            if (node.is_open && element) {\n                handleAfterOpenFolder(node, nextNode);\n            }\n        }\n    };\n\n    iterate(tree, null);\n};\n\nexport default iterateVisibleNodes;\n","import { Node, Position } from \"../node\";\nimport { getOffsetTop } from \"../util\";\nimport iterateVisibleNodes from \"./iterateVisibleNodes\";\nimport { HitArea } from \"./types\";\n\ninterface HitPosition {\n    node: Node;\n    position: null | Position;\n    top: number;\n}\n\nexport const generateHitPositions = (\n    tree: Node,\n    currentNode: Node,\n): HitPosition[] => {\n    const hitPositions: HitPosition[] = [];\n    let lastTop = 0;\n\n    const addHitPosition = (\n        node: Node,\n        position: null | Position,\n        top: number,\n    ) => {\n        hitPositions.push({\n            node,\n            position,\n            top,\n        });\n        lastTop = top;\n    };\n\n    const handleAfterOpenFolder = (node: Node, nextNode: Node | null) => {\n        if (node === currentNode || nextNode === currentNode) {\n            // Cannot move before or after current item\n            addHitPosition(node, null, lastTop);\n        } else {\n            addHitPosition(node, \"after\", lastTop);\n        }\n    };\n\n    const handleClosedFolder = (\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ) => {\n        const top = getOffsetTop(element);\n\n        if (node === currentNode) {\n            // Cannot move after current item\n            addHitPosition(node, null, top);\n        } else {\n            addHitPosition(node, \"inside\", top);\n\n            // Cannot move before current item\n            if (nextNode !== currentNode) {\n                addHitPosition(node, \"after\", top);\n            }\n        }\n    };\n\n    const handleFirstNode = (node: Node) => {\n        if (node !== currentNode && node.element) {\n            addHitPosition(node, \"before\", getOffsetTop(node.element));\n        }\n    };\n\n    const handleNode = (\n        node: Node,\n        nextNode: Node | null,\n        element: HTMLElement,\n    ) => {\n        const top = getOffsetTop(element);\n\n        if (node === currentNode) {\n            // Cannot move inside current item\n            addHitPosition(node, null, top);\n        } else {\n            addHitPosition(node, \"inside\", top);\n        }\n\n        if (nextNode === currentNode || node === currentNode) {\n            // Cannot move before or after current item\n            addHitPosition(node, null, top);\n        } else {\n            addHitPosition(node, \"after\", top);\n        }\n    };\n\n    const handleOpenFolder = (node: Node, element: HTMLElement) => {\n        if (node === currentNode) {\n            // Cannot move inside current item\n\n            // Dnd over the current element is not possible: add a position with type None for the top and the bottom.\n            const top = getOffsetTop(element);\n            const height = element.clientHeight;\n            addHitPosition(node, null, top);\n\n            if (height > 5) {\n                // Subtract 5 pixels to allow more space for the next element.\n                addHitPosition(node, null, top + height - 5);\n            }\n\n            // Stop iterating\n            return false;\n        }\n\n        // Cannot move before current item\n        if (node.children[0] !== currentNode) {\n            addHitPosition(node, \"inside\", getOffsetTop(element));\n        }\n\n        // Continue iterating\n        return true;\n    };\n\n    iterateVisibleNodes(tree, {\n        handleAfterOpenFolder,\n        handleClosedFolder,\n        handleFirstNode,\n        handleNode,\n        handleOpenFolder,\n    });\n\n    return hitPositions;\n};\n\nexport const generateHitAreasForGroup = (\n    hitAreas: HitArea[],\n    positionsInGroup: HitPosition[],\n    top: number,\n    bottom: number,\n) => {\n    // limit positions in group\n    const positionCount = Math.min(positionsInGroup.length, 4);\n\n    const areaHeight = Math.round((bottom - top) / positionCount);\n    let areaTop = top;\n\n    for (let i = 0; i < positionCount; i++) {\n        const position = positionsInGroup[i] as HitPosition;\n\n        if (position.position) {\n            hitAreas.push({\n                bottom: areaTop + areaHeight,\n                node: position.node,\n                position: position.position,\n                top: areaTop,\n            });\n        }\n\n        areaTop += areaHeight;\n    }\n};\n\nexport const generateHitAreasFromPositions = (\n    hitPositions: HitPosition[],\n    treeBottom: number,\n): HitArea[] => {\n    if (!hitPositions.length) {\n        return [];\n    }\n\n    let previousTop = (hitPositions[0] as HitPosition).top;\n    let group: HitPosition[] = [];\n    const hitAreas: HitArea[] = [];\n\n    for (const position of hitPositions) {\n        if (position.top !== previousTop && group.length) {\n            generateHitAreasForGroup(\n                hitAreas,\n                group,\n                previousTop,\n                position.top,\n            );\n\n            previousTop = position.top;\n            group = [];\n        }\n\n        group.push(position);\n    }\n\n    generateHitAreasForGroup(hitAreas, group, previousTop, treeBottom);\n\n    return hitAreas;\n};\n\nconst generateHitAreas = (tree: Node, currentNode: Node, treeBottom: number) =>\n    generateHitAreasFromPositions(\n        generateHitPositions(tree, currentNode),\n        treeBottom,\n    );\n\nexport default generateHitAreas;\n","import {\n    GetScrollLeft,\n    GetTree,\n    OpenNode,\n    RefreshElements,\n    TriggerEvent,\n} from \"../jqtreeMethodTypes\";\nimport {\n    DragMethod,\n    OnCanMove,\n    OnCanMoveTo,\n    OnIsMoveHandle,\n} from \"../jqtreeOptions\";\nimport { PositionInfo } from \"../mouseUtils\";\nimport { Node } from \"../node\";\nimport NodeElement from \"../nodeElement\";\nimport { getElementPosition } from \"../util\";\nimport binarySearch from \"./binarySearch\";\nimport DragElement from \"./dragElement\";\nimport generateHitAreas from \"./generateHitAreas\";\nimport { DropHint, HitArea } from \"./types\";\n\ninterface Dimensions {\n    bottom: number;\n    left: number;\n    right: number;\n    top: number;\n}\n\ninterface DragAndDropHandlerParams {\n    autoEscape?: boolean;\n    getNodeElement: GetNodeElement;\n    getNodeElementForNode: GetNodeElementForNode;\n    getScrollLeft: GetScrollLeft;\n    getTree: GetTree;\n    onCanMove?: OnCanMove;\n    onCanMoveTo?: OnCanMoveTo;\n    onDragMove?: DragMethod;\n    onDragStop?: DragMethod;\n    onIsMoveHandle?: OnIsMoveHandle;\n    openFolderDelay: false | number;\n    openNode: OpenNode;\n    refreshElements: RefreshElements;\n    slide: boolean;\n    treeElement: HTMLElement;\n    triggerEvent: TriggerEvent;\n}\ntype GetNodeElement = (element: HTMLElement) => NodeElement | null;\n\ntype GetNodeElementForNode = (node: Node) => NodeElement;\n\nexport class DragAndDropHandler {\n    public currentItem: NodeElement | null;\n    public hitAreas: HitArea[];\n    public hoveredArea: HitArea | null;\n    public isDragging: boolean;\n\n    private autoEscape?: boolean;\n    private dragElement: DragElement | null;\n    private getNodeElement: GetNodeElement;\n    private getNodeElementForNode: GetNodeElementForNode;\n    private getScrollLeft: GetScrollLeft;\n    private getTree: GetTree;\n    private onCanMove?: OnCanMove;\n    private onCanMoveTo?: OnCanMoveTo;\n    private onDragMove?: DragMethod;\n    private onDragStop?: DragMethod;\n    private onIsMoveHandle?: OnIsMoveHandle;\n    private openFolderDelay: false | number;\n    private openFolderTimer: null | number;\n    private openNode: OpenNode;\n    private previousGhost: DropHint | null;\n    private refreshElements: RefreshElements;\n    private slide: boolean;\n    private treeElement: HTMLElement;\n    private triggerEvent: TriggerEvent;\n\n    constructor({\n        autoEscape,\n        getNodeElement,\n        getNodeElementForNode,\n        getScrollLeft,\n        getTree,\n        onCanMove,\n        onCanMoveTo,\n        onDragMove,\n        onDragStop,\n        onIsMoveHandle,\n        openFolderDelay,\n        openNode,\n        refreshElements,\n        slide,\n        treeElement,\n        triggerEvent,\n    }: DragAndDropHandlerParams) {\n        this.autoEscape = autoEscape;\n        this.getNodeElement = getNodeElement;\n        this.getNodeElementForNode = getNodeElementForNode;\n        this.getScrollLeft = getScrollLeft;\n        this.getTree = getTree;\n        this.onCanMove = onCanMove;\n        this.onCanMoveTo = onCanMoveTo;\n        this.onDragMove = onDragMove;\n        this.onDragStop = onDragStop;\n        this.onIsMoveHandle = onIsMoveHandle;\n        this.openFolderDelay = openFolderDelay;\n        this.openNode = openNode;\n        this.refreshElements = refreshElements;\n        this.slide = slide;\n        this.treeElement = treeElement;\n        this.triggerEvent = triggerEvent;\n\n        this.hoveredArea = null;\n        this.hitAreas = [];\n        this.isDragging = false;\n        this.currentItem = null;\n    }\n\n    public mouseCapture(positionInfo: PositionInfo): boolean | null {\n        const element = positionInfo.target;\n\n        if (!this.mustCaptureElement(element)) {\n            return null;\n        }\n\n        if (this.onIsMoveHandle && !this.onIsMoveHandle(jQuery(element))) {\n            return null;\n        }\n\n        let nodeElement = this.getNodeElement(element);\n\n        if (nodeElement && this.onCanMove) {\n            if (!this.onCanMove(nodeElement.node)) {\n                nodeElement = null;\n            }\n        }\n\n        this.currentItem = nodeElement;\n        return this.currentItem != null;\n    }\n\n    public mouseDrag(positionInfo: PositionInfo): boolean {\n        if (!this.currentItem || !this.dragElement) {\n            return false;\n        }\n\n        this.dragElement.move(positionInfo.pageX, positionInfo.pageY);\n\n        const area = this.findHoveredArea(\n            positionInfo.pageX,\n            positionInfo.pageY,\n        );\n\n        if (area && this.canMoveToArea(area, this.currentItem)) {\n            if (!area.node.isFolder()) {\n                this.stopOpenFolderTimer();\n            }\n\n            if (this.hoveredArea !== area) {\n                this.hoveredArea = area;\n\n                // If this is a closed folder, start timer to open it\n                if (this.mustOpenFolderTimer(area)) {\n                    this.startOpenFolderTimer(area.node);\n                } else {\n                    this.stopOpenFolderTimer();\n                }\n\n                this.updateDropHint();\n            }\n        } else {\n            this.removeDropHint();\n            this.stopOpenFolderTimer();\n            this.hoveredArea = area;\n        }\n\n        if (!area) {\n            if (this.onDragMove) {\n                this.onDragMove(\n                    this.currentItem.node,\n                    positionInfo.originalEvent,\n                );\n            }\n        }\n\n        return true;\n    }\n\n    public mouseStart(positionInfo: PositionInfo): boolean {\n        if (!this.currentItem) {\n            return false;\n        }\n\n        this.refresh();\n\n        const { left, top } = getElementPosition(positionInfo.target);\n\n        const node = this.currentItem.node;\n\n        this.dragElement = new DragElement({\n            autoEscape: this.autoEscape ?? true,\n            nodeName: node.name,\n            offsetX: positionInfo.pageX - left,\n            offsetY: positionInfo.pageY - top,\n            treeElement: this.treeElement,\n        });\n\n        this.isDragging = true;\n        this.currentItem.element.classList.add(\"jqtree-moving\");\n\n        return true;\n    }\n\n    public mouseStop(positionInfo: PositionInfo): boolean {\n        this.moveItem(positionInfo);\n        this.clear();\n        this.removeHover();\n        this.removeDropHint();\n        this.removeHitAreas();\n\n        const currentItem = this.currentItem;\n\n        if (this.currentItem) {\n            this.currentItem.element.classList.remove(\"jqtree-moving\");\n            this.currentItem = null;\n        }\n\n        this.isDragging = false;\n\n        if (!this.hoveredArea && currentItem) {\n            if (this.onDragStop) {\n                this.onDragStop(currentItem.node, positionInfo.originalEvent);\n            }\n        }\n\n        return false;\n    }\n\n    public refresh(): void {\n        this.removeHitAreas();\n\n        if (this.currentItem) {\n            const currentNode = this.currentItem.node;\n            this.generateHitAreas(currentNode);\n            this.currentItem = this.getNodeElementForNode(currentNode);\n\n            if (this.isDragging) {\n                this.currentItem.element.classList.add(\"jqtree-moving\");\n            }\n        }\n    }\n\n    private canMoveToArea(area: HitArea, currentItem: NodeElement): boolean {\n        if (!this.onCanMoveTo) {\n            return true;\n        }\n\n        return this.onCanMoveTo(currentItem.node, area.node, area.position);\n    }\n\n    private clear(): void {\n        if (this.dragElement) {\n            this.dragElement.remove();\n            this.dragElement = null;\n        }\n    }\n\n    private findHoveredArea(x: number, y: number): HitArea | null {\n        const dimensions = this.getTreeDimensions();\n\n        if (\n            x < dimensions.left ||\n            y < dimensions.top ||\n            x > dimensions.right ||\n            y > dimensions.bottom\n        ) {\n            return null;\n        }\n\n        return binarySearch<HitArea>(this.hitAreas, (area) => {\n            if (y < area.top) {\n                return 1;\n            } else if (y > area.bottom) {\n                return -1;\n            } else {\n                return 0;\n            }\n        });\n    }\n\n    private generateHitAreas(currentNode: Node): void {\n        const tree = this.getTree();\n\n        if (!tree) {\n            this.hitAreas = [];\n        } else {\n            this.hitAreas = generateHitAreas(\n                tree,\n                currentNode,\n                this.getTreeDimensions().bottom,\n            );\n        }\n    }\n\n    private getTreeDimensions(): Dimensions {\n        // Return the dimensions of the tree. Add a margin to the bottom to allow\n        // to drag-and-drop after the last element.\n        const treePosition = getElementPosition(this.treeElement);\n        const left = treePosition.left + this.getScrollLeft();\n        const top = treePosition.top;\n\n        return {\n            bottom: top + this.treeElement.clientHeight + 16,\n            left,\n            right: left + this.treeElement.clientWidth,\n            top,\n        };\n    }\n\n    /* Move the dragged node to the selected position in the tree. */\n    private moveItem(positionInfo: PositionInfo): void {\n        if (\n            this.currentItem &&\n            this.hoveredArea?.position &&\n            this.canMoveToArea(this.hoveredArea, this.currentItem)\n        ) {\n            const movedNode = this.currentItem.node;\n            const targetNode = this.hoveredArea.node;\n            const position = this.hoveredArea.position;\n            const previousParent = movedNode.parent;\n\n            if (position === \"inside\") {\n                this.hoveredArea.node.is_open = true;\n            }\n\n            const doMove = (): void => {\n                const tree = this.getTree();\n\n                if (tree) {\n                    tree.moveNode(movedNode, targetNode, position);\n\n                    this.treeElement.textContent = \"\";\n                    this.refreshElements(null);\n                }\n            };\n\n            const event = this.triggerEvent(\"tree.move\", {\n                move_info: {\n                    do_move: doMove,\n                    moved_node: movedNode,\n                    original_event: positionInfo.originalEvent,\n                    position,\n                    previous_parent: previousParent,\n                    target_node: targetNode,\n                },\n            });\n\n            if (!event.isDefaultPrevented()) {\n                doMove();\n            }\n        }\n    }\n\n    private mustCaptureElement(element: HTMLElement): boolean {\n        const nodeName = element.nodeName;\n\n        return (\n            nodeName !== \"INPUT\" &&\n            nodeName !== \"SELECT\" &&\n            nodeName !== \"TEXTAREA\"\n        );\n    }\n\n    private mustOpenFolderTimer(area: HitArea): boolean {\n        const node = area.node;\n\n        return node.isFolder() && !node.is_open && area.position === \"inside\";\n    }\n\n    private removeDropHint(): void {\n        if (this.previousGhost) {\n            this.previousGhost.remove();\n        }\n    }\n\n    private removeHitAreas(): void {\n        this.hitAreas = [];\n    }\n\n    private removeHover(): void {\n        this.hoveredArea = null;\n    }\n\n    private startOpenFolderTimer(folder: Node): void {\n        const openFolder = (): void => {\n            this.openNode(folder, this.slide, () => {\n                this.refresh();\n                this.updateDropHint();\n            });\n        };\n\n        this.stopOpenFolderTimer();\n\n        const openFolderDelay = this.openFolderDelay;\n\n        if (openFolderDelay !== false) {\n            this.openFolderTimer = window.setTimeout(\n                openFolder,\n                openFolderDelay,\n            );\n        }\n    }\n\n    private stopOpenFolderTimer(): void {\n        if (this.openFolderTimer) {\n            clearTimeout(this.openFolderTimer);\n            this.openFolderTimer = null;\n        }\n    }\n\n    private updateDropHint(): void {\n        if (!this.hoveredArea) {\n            return;\n        }\n\n        // remove previous drop hint\n        this.removeDropHint();\n\n        // add new drop hint\n        const nodeElement = this.getNodeElementForNode(this.hoveredArea.node);\n        this.previousGhost = nodeElement.addDropHint(this.hoveredArea.position);\n    }\n}\n","import { GetTree, IsNodeSelected } from \"./jqtreeMethodTypes\";\nimport { IconElement, OnCreateLi } from \"./jqtreeOptions\";\nimport { Node } from \"./node\";\nimport { getBoolString } from \"./util\";\n\ninterface ElementsRendererParams {\n    $element: JQuery;\n    autoEscape: boolean;\n    buttonLeft: boolean;\n    closedIcon?: IconElement;\n    dragAndDrop: boolean;\n    getTree: GetTree;\n    isNodeSelected: IsNodeSelected;\n    onCreateLi?: OnCreateLi;\n    openedIcon?: IconElement;\n    rtl?: boolean;\n    showEmptyFolder: boolean;\n    tabIndex?: number;\n}\n\nexport default class ElementsRenderer {\n    public closedIconElement?: HTMLElement | Text;\n    public openedIconElement?: HTMLElement | Text;\n    private $element: JQuery;\n    private autoEscape: boolean;\n    private buttonLeft: boolean;\n    private dragAndDrop: boolean;\n    private getTree: GetTree;\n    private isNodeSelected: IsNodeSelected;\n    private onCreateLi?: OnCreateLi;\n    private rtl?: boolean;\n\n    private showEmptyFolder: boolean;\n    private tabIndex?: number;\n\n    constructor({\n        $element,\n        autoEscape,\n        buttonLeft,\n        closedIcon,\n        dragAndDrop,\n        getTree,\n        isNodeSelected,\n        onCreateLi,\n        openedIcon,\n        rtl,\n        showEmptyFolder,\n        tabIndex,\n    }: ElementsRendererParams) {\n        this.autoEscape = autoEscape;\n        this.buttonLeft = buttonLeft;\n        this.dragAndDrop = dragAndDrop;\n        this.$element = $element;\n        this.getTree = getTree;\n        this.isNodeSelected = isNodeSelected;\n        this.onCreateLi = onCreateLi;\n        this.rtl = rtl;\n        this.showEmptyFolder = showEmptyFolder;\n        this.tabIndex = tabIndex;\n        this.openedIconElement = this.createButtonElement(openedIcon ?? \"+\");\n        this.closedIconElement = this.createButtonElement(closedIcon ?? \"-\");\n    }\n\n    public render(fromNode: Node | null): void {\n        if (fromNode?.parent) {\n            this.renderFromNode(fromNode);\n        } else {\n            this.renderFromRoot();\n        }\n    }\n\n    public renderFromNode(node: Node): void {\n        if (!node.element) {\n            return;\n        }\n\n        // remember current li\n        const $previousLi = jQuery(node.element);\n\n        // create element\n        const li = this.createLi(node, node.getLevel());\n\n        // add element to dom\n        $previousLi.after(li);\n\n        // remove previous li\n        $previousLi.remove();\n\n        // create children\n        this.createDomElements(li, node.children, false, node.getLevel() + 1);\n    }\n\n    public renderFromRoot(): void {\n        this.$element.empty();\n\n        const tree = this.getTree();\n\n        if (this.$element[0] && tree) {\n            this.createDomElements(this.$element[0], tree.children, true, 1);\n        }\n    }\n\n    private attachNodeData(node: Node, li: HTMLElement): void {\n        node.element = li;\n        jQuery(li).data(\"node\", node);\n    }\n\n    private createButtonElement(\n        value: IconElement,\n    ): HTMLElement | Text | undefined {\n        if (typeof value === \"string\") {\n            // convert value to html\n            const div = document.createElement(\"div\");\n            div.innerHTML = value;\n\n            return document.createTextNode(div.innerHTML);\n        } else if ((value as HTMLElement).nodeType) {\n            return value as HTMLElement;\n        } else {\n            return jQuery(value)[0];\n        }\n    }\n\n    private createDomElements(\n        element: Element,\n        children: Node[],\n        isRootNode: boolean,\n        level: number,\n    ): void {\n        const ul = this.createUl(isRootNode);\n        element.appendChild(ul);\n\n        for (const child of children) {\n            const li = this.createLi(child, level);\n            ul.appendChild(li);\n\n            if (child.hasChildren()) {\n                this.createDomElements(li, child.children, false, level + 1);\n            }\n        }\n    }\n\n    private createFolderLi(\n        node: Node,\n        level: number,\n        isSelected: boolean,\n    ): HTMLLIElement {\n        const buttonClasses = this.getButtonClasses(node);\n        const folderClasses = this.getFolderClasses(node, isSelected);\n\n        const iconElement = node.is_open\n            ? this.openedIconElement\n            : this.closedIconElement;\n\n        // li\n        const li = document.createElement(\"li\");\n        li.className = `jqtree_common ${folderClasses}`;\n        li.setAttribute(\"role\", \"none\");\n\n        // div\n        const div = document.createElement(\"div\");\n        div.className = \"jqtree-element jqtree_common\";\n        div.setAttribute(\"role\", \"none\");\n\n        li.appendChild(div);\n\n        // button link\n        const buttonLink = document.createElement(\"a\");\n        buttonLink.className = buttonClasses;\n\n        if (iconElement) {\n            buttonLink.appendChild(iconElement.cloneNode(true));\n        }\n\n        if (this.buttonLeft) {\n            div.appendChild(buttonLink);\n        }\n\n        // title span\n        const titleSpan = this.createTitleSpan(\n            node.name,\n            isSelected,\n            true,\n            level,\n        );\n        titleSpan.setAttribute(\"aria-expanded\", getBoolString(node.is_open));\n        div.appendChild(titleSpan);\n\n        if (!this.buttonLeft) {\n            div.appendChild(buttonLink);\n        }\n\n        return li;\n    }\n\n    /* Create the <li> element\n     * Attach it to node.element.\n     * Call onCreateLi\n     */\n    private createLi(node: Node, level: number): HTMLLIElement {\n        const isSelected = this.isNodeSelected(node);\n\n        const mustShowFolder =\n            node.isFolder() || (node.isEmptyFolder && this.showEmptyFolder);\n\n        const li = mustShowFolder\n            ? this.createFolderLi(node, level, isSelected)\n            : this.createNodeLi(node, level, isSelected);\n\n        this.attachNodeData(node, li);\n\n        if (this.onCreateLi) {\n            this.onCreateLi(node, jQuery(li), isSelected);\n        }\n\n        return li;\n    }\n\n    private createNodeLi(\n        node: Node,\n        level: number,\n        isSelected: boolean,\n    ): HTMLLIElement {\n        const liClasses = [\"jqtree_common\"];\n\n        if (isSelected) {\n            liClasses.push(\"jqtree-selected\");\n        }\n\n        const classString = liClasses.join(\" \");\n\n        // li\n        const li = document.createElement(\"li\");\n        li.className = classString;\n        li.setAttribute(\"role\", \"none\");\n\n        // div\n        const div = document.createElement(\"div\");\n        div.className = \"jqtree-element jqtree_common\";\n        div.setAttribute(\"role\", \"none\");\n\n        li.appendChild(div);\n\n        // title span\n        const titleSpan = this.createTitleSpan(\n            node.name,\n            isSelected,\n            false,\n            level,\n        );\n        div.appendChild(titleSpan);\n\n        return li;\n    }\n\n    private createTitleSpan(\n        nodeName: string,\n        isSelected: boolean,\n        isFolder: boolean,\n        level: number,\n    ): HTMLSpanElement {\n        const titleSpan = document.createElement(\"span\");\n\n        let classes = \"jqtree-title jqtree_common\";\n\n        if (isFolder) {\n            classes += \" jqtree-title-folder\";\n        }\n\n        classes += ` jqtree-title-button-${this.buttonLeft ? \"left\" : \"right\"}`;\n\n        titleSpan.className = classes;\n\n        if (isSelected) {\n            const tabIndex = this.tabIndex;\n\n            if (tabIndex !== undefined) {\n                titleSpan.setAttribute(\"tabindex\", `${tabIndex}`);\n            }\n        }\n\n        this.setTreeItemAriaAttributes(titleSpan, nodeName, level, isSelected);\n\n        if (this.autoEscape) {\n            titleSpan.textContent = nodeName;\n        } else {\n            titleSpan.innerHTML = nodeName;\n        }\n\n        return titleSpan;\n    }\n\n    private createUl(isRootNode: boolean): HTMLUListElement {\n        let classString;\n        let role;\n\n        if (!isRootNode) {\n            classString = \"\";\n            role = \"group\";\n        } else {\n            classString = \"jqtree-tree\";\n            role = \"tree\";\n\n            if (this.rtl) {\n                classString += \" jqtree-rtl\";\n            }\n        }\n\n        if (this.dragAndDrop) {\n            classString += \" jqtree-dnd\";\n        }\n\n        const ul = document.createElement(\"ul\");\n        ul.className = `jqtree_common ${classString}`;\n\n        ul.setAttribute(\"role\", role);\n\n        return ul;\n    }\n\n    private getButtonClasses(node: Node): string {\n        const classes = [\"jqtree-toggler\", \"jqtree_common\"];\n\n        if (!node.is_open) {\n            classes.push(\"jqtree-closed\");\n        }\n\n        if (this.buttonLeft) {\n            classes.push(\"jqtree-toggler-left\");\n        } else {\n            classes.push(\"jqtree-toggler-right\");\n        }\n\n        return classes.join(\" \");\n    }\n\n    private getFolderClasses(node: Node, isSelected: boolean): string {\n        const classes = [\"jqtree-folder\"];\n\n        if (!node.is_open) {\n            classes.push(\"jqtree-closed\");\n        }\n\n        if (isSelected) {\n            classes.push(\"jqtree-selected\");\n        }\n\n        if (node.is_loading) {\n            classes.push(\"jqtree-loading\");\n        }\n\n        return classes.join(\" \");\n    }\n\n    private setTreeItemAriaAttributes(\n        element: HTMLElement,\n        name: string,\n        level: number,\n        isSelected: boolean,\n    ) {\n        element.setAttribute(\"aria-label\", name);\n        element.setAttribute(\"aria-level\", `${level}`);\n        element.setAttribute(\"aria-selected\", getBoolString(isSelected));\n        element.setAttribute(\"role\", \"treeitem\");\n    }\n}\n","import {\n    CloseNode,\n    GetSelectedNode,\n    IsFocusOnTree,\n    OpenNode,\n    SelectNode,\n} from \"./jqtreeMethodTypes\";\nimport { Node } from \"./node\";\n\ninterface KeyHandlerParams {\n    closeNode: CloseNode;\n    getSelectedNode: GetSelectedNode;\n    isFocusOnTree: IsFocusOnTree;\n    keyboardSupport: boolean;\n    openNode: OpenNode;\n    selectNode: SelectNode;\n}\n\nexport default class KeyHandler {\n    private closeNode: CloseNode;\n    private getSelectedNode: GetSelectedNode;\n\n    private isFocusOnTree: IsFocusOnTree;\n\n    private keyboardSupport: boolean;\n    private openNode: OpenNode;\n    private originalSelectNode: SelectNode;\n    constructor({\n        closeNode,\n        getSelectedNode,\n        isFocusOnTree,\n        keyboardSupport,\n        openNode,\n        selectNode,\n    }: KeyHandlerParams) {\n        this.closeNode = closeNode;\n        this.getSelectedNode = getSelectedNode;\n        this.isFocusOnTree = isFocusOnTree;\n        this.keyboardSupport = keyboardSupport;\n        this.openNode = openNode;\n        this.originalSelectNode = selectNode;\n\n        if (keyboardSupport) {\n            document.addEventListener(\"keydown\", this.handleKeyDown);\n        }\n    }\n\n    public deinit(): void {\n        if (this.keyboardSupport) {\n            document.removeEventListener(\"keydown\", this.handleKeyDown);\n        }\n    }\n\n    public moveDown(selectedNode: Node): boolean {\n        return this.selectNode(selectedNode.getNextVisibleNode());\n    }\n\n    public moveUp(selectedNode: Node): boolean {\n        return this.selectNode(selectedNode.getPreviousVisibleNode());\n    }\n\n    private canHandleKeyboard(): boolean {\n        return this.keyboardSupport && this.isFocusOnTree();\n    }\n\n    private handleKeyDown = (e: KeyboardEvent): void => {\n        if (!this.canHandleKeyboard()) {\n            return;\n        }\n\n        let isKeyHandled = false;\n\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            switch (e.key) {\n                case \"ArrowDown\":\n                    isKeyHandled = this.moveDown(selectedNode);\n                    break;\n\n                case \"ArrowLeft\":\n                    isKeyHandled = this.moveLeft(selectedNode);\n                    break;\n\n                case \"ArrowRight\":\n                    isKeyHandled = this.moveRight(selectedNode);\n                    break;\n\n                case \"ArrowUp\":\n                    isKeyHandled = this.moveUp(selectedNode);\n                    break;\n            }\n        }\n\n        if (isKeyHandled) {\n            e.preventDefault();\n        }\n    };\n\n    private moveLeft(selectedNode: Node): boolean {\n        if (selectedNode.isFolder() && selectedNode.is_open) {\n            // Left on an open node closes the node\n            this.closeNode(selectedNode);\n            return true;\n        } else {\n            // Left on a closed or end node moves focus to the node's parent\n            return this.selectNode(selectedNode.getParent());\n        }\n    }\n\n    private moveRight(selectedNode: Node): boolean {\n        if (!selectedNode.isFolder()) {\n            return false;\n        } else {\n            // folder node\n            if (selectedNode.is_open) {\n                // Right moves to the first child of an open node\n                return this.selectNode(selectedNode.getNextVisibleNode());\n            } else {\n                // Right expands a closed node\n                this.openNode(selectedNode);\n                return true;\n            }\n        }\n    }\n\n    /* Select the node.\n     * Don't do anything if the node is null.\n     * Result: a different node was selected.\n     */\n    private selectNode(node: Node | null): boolean {\n        if (!node) {\n            return false;\n        } else {\n            this.originalSelectNode(node);\n\n            return true;\n        }\n    }\n}\n","export interface PositionInfo {\n    originalEvent: Event;\n    pageX: number;\n    pageY: number;\n    target: HTMLElement;\n}\n\nexport const getPositionInfoFromMouseEvent = (e: MouseEvent): PositionInfo => ({\n    originalEvent: e,\n    pageX: e.pageX,\n    pageY: e.pageY,\n    target: e.target as HTMLElement,\n});\n\nexport const getPositionInfoFromTouch = (\n    touch: Touch,\n    e: TouchEvent,\n): PositionInfo => ({\n    originalEvent: e,\n    pageX: touch.pageX,\n    pageY: touch.pageY,\n    target: touch.target as HTMLElement,\n});\n","import { TriggerEvent } from \"./jqtreeMethodTypes\";\nimport {\n    getPositionInfoFromMouseEvent,\n    getPositionInfoFromTouch,\n    PositionInfo,\n} from \"./mouseUtils\";\nimport { Node } from \"./node\";\n\nexport type GetMouseDelay = () => number;\nexport type GetNode = (element: HTMLElement) => Node | null;\nexport type MouseCapture = (positionInfo: PositionInfo) => boolean | null;\nexport type MouseStart = (positionInfo: PositionInfo) => boolean;\n\ninterface ClickTarget {\n    node: Node;\n    type: \"button\" | \"label\";\n}\n\ninterface MouseHandlerParams {\n    element: HTMLElement;\n    getMouseDelay: () => number;\n    getNode: GetNode;\n    onClickButton: (node: Node) => void;\n    onClickTitle: (node: Node) => void;\n    onMouseCapture: MouseCapture;\n    onMouseDrag: (positionInfo: PositionInfo) => void;\n    onMouseStart: MouseStart;\n    onMouseStop: (positionInfo: PositionInfo) => void;\n    triggerEvent: TriggerEvent;\n    useContextMenu: boolean;\n}\n\nclass MouseHandler {\n    private element: HTMLElement;\n    private getMouseDelay: GetMouseDelay;\n    private getNode: GetNode;\n\n    private isMouseDelayMet: boolean;\n\n    private isMouseStarted: boolean;\n\n    private mouseDelayTimer: null | number;\n\n    private mouseDownInfo: null | PositionInfo;\n    private onClickButton: (node: Node) => void;\n    private onClickTitle: (node: Node) => void;\n\n    private onMouseCapture: MouseCapture;\n\n    private onMouseDrag: (positionInfo: PositionInfo) => void;\n\n    private onMouseStart: MouseStart;\n\n    private onMouseStop: (positionInfo: PositionInfo) => void;\n\n    private triggerEvent: TriggerEvent;\n    private useContextMenu: boolean;\n    constructor({\n        element,\n        getMouseDelay,\n        getNode,\n        onClickButton,\n        onClickTitle,\n        onMouseCapture,\n        onMouseDrag,\n        onMouseStart,\n        onMouseStop,\n        triggerEvent,\n        useContextMenu,\n    }: MouseHandlerParams) {\n        this.element = element;\n        this.getMouseDelay = getMouseDelay;\n        this.getNode = getNode;\n        this.onClickButton = onClickButton;\n        this.onClickTitle = onClickTitle;\n        this.onMouseCapture = onMouseCapture;\n        this.onMouseDrag = onMouseDrag;\n        this.onMouseStart = onMouseStart;\n        this.onMouseStop = onMouseStop;\n        this.triggerEvent = triggerEvent;\n        this.useContextMenu = useContextMenu;\n\n        element.addEventListener(\"click\", this.handleClick);\n        element.addEventListener(\"dblclick\", this.handleDblclick);\n        element.addEventListener(\"mousedown\", this.mouseDown, {\n            passive: false,\n        });\n        element.addEventListener(\"touchstart\", this.touchStart, {\n            passive: false,\n        });\n\n        if (useContextMenu) {\n            element.addEventListener(\"contextmenu\", this.handleContextmenu);\n        }\n\n        this.isMouseStarted = false;\n        this.mouseDelayTimer = null;\n        this.isMouseDelayMet = false;\n        this.mouseDownInfo = null;\n    }\n    public deinit(): void {\n        this.element.removeEventListener(\"click\", this.handleClick);\n        this.element.removeEventListener(\"dblclick\", this.handleDblclick);\n\n        if (this.useContextMenu) {\n            this.element.removeEventListener(\n                \"contextmenu\",\n                this.handleContextmenu,\n            );\n        }\n\n        this.element.removeEventListener(\"mousedown\", this.mouseDown);\n        this.element.removeEventListener(\"touchstart\", this.touchStart);\n        this.removeMouseMoveEventListeners();\n    }\n    private getClickTarget(element: HTMLElement): ClickTarget | null {\n        const button = element.closest<HTMLElement>(\".jqtree-toggler\");\n\n        if (button) {\n            const node = this.getNode(button);\n\n            if (node) {\n                return {\n                    node,\n                    type: \"button\",\n                };\n            }\n        } else {\n            const jqTreeElement =\n                element.closest<HTMLElement>(\".jqtree-element\");\n\n            if (jqTreeElement) {\n                const node = this.getNode(jqTreeElement);\n                if (node) {\n                    return {\n                        node,\n                        type: \"label\",\n                    };\n                }\n            }\n        }\n\n        return null;\n    }\n    private handleClick = (e: MouseEvent): void => {\n        if (!e.target) {\n            return;\n        }\n\n        const clickTarget = this.getClickTarget(e.target as HTMLElement);\n\n        if (!clickTarget) {\n            return;\n        }\n\n        switch (clickTarget.type) {\n            case \"button\":\n                this.onClickButton(clickTarget.node);\n\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n\n            case \"label\": {\n                const event = this.triggerEvent(\"tree.click\", {\n                    click_event: e,\n                    node: clickTarget.node,\n                });\n\n                if (!event.isDefaultPrevented()) {\n                    this.onClickTitle(clickTarget.node);\n                }\n                break;\n            }\n        }\n    };\n\n    private handleContextmenu = (e: MouseEvent) => {\n        if (!e.target) {\n            return;\n        }\n\n        const div = (e.target as HTMLElement).closest<HTMLElement>(\n            \"ul.jqtree-tree .jqtree-element\",\n        );\n\n        if (div) {\n            const node = this.getNode(div);\n            if (node) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                this.triggerEvent(\"tree.contextmenu\", {\n                    click_event: e,\n                    node,\n                });\n                return false;\n            }\n        }\n\n        return null;\n    };\n\n    private handleDblclick = (e: MouseEvent): void => {\n        if (!e.target) {\n            return;\n        }\n\n        const clickTarget = this.getClickTarget(e.target as HTMLElement);\n\n        if (clickTarget?.type === \"label\") {\n            this.triggerEvent(\"tree.dblclick\", {\n                click_event: e,\n                node: clickTarget.node,\n            });\n        }\n    };\n\n    private handleMouseDown(positionInfo: PositionInfo): boolean {\n        // We may have missed mouseup (out of window)\n        if (this.isMouseStarted) {\n            this.handleMouseUp(positionInfo);\n        }\n\n        this.mouseDownInfo = positionInfo;\n\n        if (!this.onMouseCapture(positionInfo)) {\n            return false;\n        }\n\n        this.handleStartMouse();\n\n        return true;\n    }\n\n    private handleMouseMove(\n        e: MouseEvent | TouchEvent,\n        positionInfo: PositionInfo,\n    ): void {\n        if (this.isMouseStarted) {\n            this.onMouseDrag(positionInfo);\n\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n            return;\n        }\n\n        if (!this.isMouseDelayMet) {\n            return;\n        }\n\n        if (this.mouseDownInfo) {\n            this.isMouseStarted = this.onMouseStart(this.mouseDownInfo);\n        }\n\n        if (this.isMouseStarted) {\n            this.onMouseDrag(positionInfo);\n\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n        } else {\n            this.handleMouseUp(positionInfo);\n        }\n    }\n    private handleMouseUp(positionInfo: PositionInfo): void {\n        this.removeMouseMoveEventListeners();\n        this.isMouseDelayMet = false;\n        this.mouseDownInfo = null;\n\n        if (this.isMouseStarted) {\n            this.isMouseStarted = false;\n            this.onMouseStop(positionInfo);\n        }\n    }\n\n    private handleStartMouse(): void {\n        document.addEventListener(\"mousemove\", this.mouseMove, {\n            passive: false,\n        });\n        document.addEventListener(\"touchmove\", this.touchMove, {\n            passive: false,\n        });\n        document.addEventListener(\"mouseup\", this.mouseUp, { passive: false });\n        document.addEventListener(\"touchend\", this.touchEnd, {\n            passive: false,\n        });\n\n        const mouseDelay = this.getMouseDelay();\n\n        if (mouseDelay) {\n            this.startMouseDelayTimer(mouseDelay);\n        } else {\n            this.isMouseDelayMet = true;\n        }\n    }\n\n    private mouseDown = (e: MouseEvent): void => {\n        // Left mouse button?\n        if (e.button !== 0) {\n            return;\n        }\n\n        const result = this.handleMouseDown(getPositionInfoFromMouseEvent(e));\n\n        if (result && e.cancelable) {\n            e.preventDefault();\n        }\n    };\n\n    private mouseMove = (e: MouseEvent): void => {\n        this.handleMouseMove(e, getPositionInfoFromMouseEvent(e));\n    };\n\n    private mouseUp = (e: MouseEvent): void => {\n        this.handleMouseUp(getPositionInfoFromMouseEvent(e));\n    };\n\n    private removeMouseMoveEventListeners() {\n        document.removeEventListener(\"mousemove\", this.mouseMove);\n        document.removeEventListener(\"touchmove\", this.touchMove);\n        document.removeEventListener(\"mouseup\", this.mouseUp);\n        document.removeEventListener(\"touchend\", this.touchEnd);\n    }\n\n    private startMouseDelayTimer(mouseDelay: number): void {\n        if (this.mouseDelayTimer) {\n            clearTimeout(this.mouseDelayTimer);\n        }\n\n        this.mouseDelayTimer = window.setTimeout(() => {\n            if (this.mouseDownInfo) {\n                this.isMouseDelayMet = true;\n            }\n        }, mouseDelay);\n\n        this.isMouseDelayMet = false;\n    }\n\n    private touchEnd = (e: TouchEvent): void => {\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.touches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseUp(getPositionInfoFromTouch(touch, e));\n    };\n\n    private touchMove = (e: TouchEvent): void => {\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.touches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseMove(e, getPositionInfoFromTouch(touch, e));\n    };\n\n    private touchStart = (e: TouchEvent): void => {\n        if (e.touches.length > 1) {\n            return;\n        }\n\n        const touch = e.touches[0];\n\n        if (!touch) {\n            return;\n        }\n\n        this.handleMouseDown(getPositionInfoFromTouch(touch, e));\n    };\n}\n\nexport default MouseHandler;\n","interface NodeRecordWithChildren extends NodeRecord {\n    children: NodeData[];\n}\n\nexport const isNodeRecordWithChildren = (\n    data: NodeData,\n): data is NodeRecordWithChildren =>\n    typeof data === \"object\" &&\n    \"children\" in data &&\n    data.children instanceof Array;\n","import { isNodeRecordWithChildren } from \"./nodeUtils\";\n\nexport type Position = \"after\" | \"before\" | \"inside\";\n\ntype IterateCallback = (node: Node, level: number) => boolean;\n\nexport class Node implements INode {\n    [key: string]: unknown;\n\n    public children: Node[];\n    public element?: HTMLElement;\n    public id?: NodeId;\n    public idMapping: Map<NodeId, Node>;\n    public is_loading: boolean;\n    public is_open: boolean;\n    public isEmptyFolder: boolean;\n    public load_on_demand: boolean;\n    public name: string;\n    public nodeClass?: typeof Node;\n    public parent: Node | null;\n    public tree?: Node;\n\n    constructor(\n        nodeData: NodeData | null = null,\n        isRoot = false,\n        nodeClass = Node,\n    ) {\n        this.name = \"\";\n        this.load_on_demand = false;\n\n        this.isEmptyFolder =\n            nodeData != null &&\n            isNodeRecordWithChildren(nodeData) &&\n            nodeData.children.length === 0;\n\n        this.setData(nodeData);\n\n        this.children = [];\n        this.parent = null;\n\n        if (isRoot) {\n            this.idMapping = new Map<NodeId, Node>();\n            this.tree = this;\n            this.nodeClass = nodeClass;\n        }\n    }\n\n    public addAfter(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const node = this.createNode(nodeInfo);\n\n            const childIndex = this.parent.getChildIndex(this);\n            this.parent.addChildAtPosition(node, childIndex + 1);\n\n            node.loadChildrenFromData(nodeInfo);\n            return node;\n        }\n    }\n\n    public addBefore(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const node = this.createNode(nodeInfo);\n\n            const childIndex = this.parent.getChildIndex(this);\n            this.parent.addChildAtPosition(node, childIndex);\n\n            node.loadChildrenFromData(nodeInfo);\n            return node;\n        }\n    }\n\n    /*\n    Add child.\n\n    tree.addChild(\n        new Node('child1')\n    );\n    */\n    public addChild(node: Node): void {\n        this.children.push(node);\n        node.setParent(this);\n    }\n\n    /*\n    Add child at position. Index starts at 0.\n\n    tree.addChildAtPosition(\n        new Node('abc'),\n        1\n    );\n    */\n    public addChildAtPosition(node: Node, index: number): void {\n        this.children.splice(index, 0, node);\n        node.setParent(this);\n    }\n\n    public addNodeToIndex(node: Node): void {\n        if (node.id != null) {\n            this.idMapping.set(node.id, node);\n        }\n    }\n\n    public addParent(nodeInfo: NodeData): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const newParent = this.createNode(nodeInfo);\n\n            if (this.tree) {\n                newParent.setParent(this.tree);\n            }\n            const originalParent = this.parent;\n\n            for (const child of originalParent.children) {\n                newParent.addChild(child);\n            }\n\n            originalParent.children = [];\n            originalParent.addChild(newParent);\n            return newParent;\n        }\n    }\n\n    public append(nodeInfo: NodeData): Node {\n        const node = this.createNode(nodeInfo);\n        this.addChild(node);\n\n        node.loadChildrenFromData(nodeInfo);\n        return node;\n    }\n\n    public filter(f: (node: Node) => boolean): Node[] {\n        const result: Node[] = [];\n\n        this.iterate((node: Node) => {\n            if (f(node)) {\n                result.push(node);\n            }\n\n            return true;\n        });\n\n        return result;\n    }\n\n    /*\n    Get child index.\n\n    var index = getChildIndex(node);\n    */\n    public getChildIndex(node: Node): number {\n        return this.children.indexOf(node);\n    }\n\n    /*\n    Get the tree as data.\n    */\n    public getData(includeParent = false): NodeRecord[] {\n        const getDataFromNodes = (nodes: Node[]): Record<string, unknown>[] => {\n            return nodes.map((node) => {\n                const tmpNode: Record<string, unknown> = {};\n\n                for (const k in node) {\n                    if (\n                        [\n                            \"parent\",\n                            \"children\",\n                            \"element\",\n                            \"idMapping\",\n                            \"load_on_demand\",\n                            \"nodeClass\",\n                            \"tree\",\n                            \"isEmptyFolder\",\n                        ].indexOf(k) === -1 &&\n                        Object.prototype.hasOwnProperty.call(node, k)\n                    ) {\n                        const v = node[k];\n                        tmpNode[k] = v;\n                    }\n                }\n\n                if (node.hasChildren()) {\n                    tmpNode.children = getDataFromNodes(node.children);\n                }\n\n                return tmpNode;\n            });\n        };\n\n        if (includeParent) {\n            return getDataFromNodes([this]);\n        } else {\n            return getDataFromNodes(this.children);\n        }\n    }\n\n    public getLastChild(): Node | null {\n        if (!this.hasChildren()) {\n            return null;\n        } else {\n            const lastChild = this.children[this.children.length - 1] as Node;\n\n            if (!(lastChild.hasChildren() && lastChild.is_open)) {\n                return lastChild;\n            } else {\n                return lastChild.getLastChild();\n            }\n        }\n    }\n\n    public getLevel(): number {\n        let level = 0;\n        let node: Node = this; // eslint-disable-line @typescript-eslint/no-this-alias\n\n        while (node.parent) {\n            level += 1;\n            node = node.parent;\n        }\n\n        return level;\n    }\n\n    public getNextNode(includeChildren = true): Node | null {\n        if (includeChildren && this.hasChildren()) {\n            return this.children[0] ?? null;\n        } else if (!this.parent) {\n            return null;\n        } else {\n            const nextSibling = this.getNextSibling();\n\n            if (nextSibling) {\n                return nextSibling;\n            } else {\n                return this.parent.getNextNode(false);\n            }\n        }\n    }\n\n    public getNextSibling(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const nextIndex = this.parent.getChildIndex(this) + 1;\n            if (nextIndex < this.parent.children.length) {\n                return this.parent.children[nextIndex] ?? null;\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public getNextVisibleNode(): Node | null {\n        if (this.hasChildren() && this.is_open) {\n            // First child\n            return this.children[0] ?? null;\n        } else {\n            if (!this.parent) {\n                return null;\n            } else {\n                const nextSibling = this.getNextSibling();\n                if (nextSibling) {\n                    // Next sibling\n                    return nextSibling;\n                } else {\n                    // Next node of parent\n                    return this.parent.getNextNode(false);\n                }\n            }\n        }\n    }\n\n    public getNodeByCallback(callback: (node: Node) => boolean): Node | null {\n        let result: Node | null = null;\n\n        this.iterate((node: Node) => {\n            if (result) {\n                return false;\n            } else if (callback(node)) {\n                result = node;\n                return false;\n            } else {\n                return true;\n            }\n        });\n\n        return result;\n    }\n\n    public getNodeById(nodeId: NodeId): Node | null {\n        return this.idMapping.get(nodeId) ?? null;\n    }\n\n    public getNodeByName(name: string): Node | null {\n        return this.getNodeByCallback((node: Node) => node.name === name);\n    }\n\n    public getNodeByNameMustExist(name: string): Node {\n        const node = this.getNodeByCallback((n: Node) => n.name === name);\n\n        if (!node) {\n            throw new Error(`Node with name ${name} not found`);\n        }\n\n        return node;\n    }\n\n    public getNodesByProperty(key: string, value: unknown): Node[] {\n        return this.filter((node: Node) => node[key] === value);\n    }\n\n    public getParent(): Node | null {\n        // Return parent except if it is the root node\n        if (!this.parent) {\n            return null;\n        } else if (!this.parent.parent) {\n            // Root node -> null\n            return null;\n        } else {\n            return this.parent;\n        }\n    }\n\n    public getPreviousNode(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousSibling = this.getPreviousSibling();\n\n            if (!previousSibling) {\n                return this.getParent();\n            } else if (previousSibling.hasChildren()) {\n                return previousSibling.getLastChild();\n            } else {\n                return previousSibling;\n            }\n        }\n    }\n\n    public getPreviousSibling(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousIndex = this.parent.getChildIndex(this) - 1;\n            if (previousIndex >= 0) {\n                return this.parent.children[previousIndex] ?? null;\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public getPreviousVisibleNode(): Node | null {\n        if (!this.parent) {\n            return null;\n        } else {\n            const previousSibling = this.getPreviousSibling();\n\n            if (!previousSibling) {\n                return this.getParent();\n            } else if (\n                !previousSibling.hasChildren() ||\n                !previousSibling.is_open\n            ) {\n                // Previous sibling\n                return previousSibling;\n            } else {\n                // Last child of previous sibling\n                return previousSibling.getLastChild();\n            }\n        }\n    }\n\n    /*\n    Does the tree have children?\n\n    if (tree.hasChildren()) {\n        //\n    }\n    */\n    public hasChildren(): boolean {\n        return this.children.length !== 0;\n    }\n\n    // Init Node from data without making it the root of the tree\n    public initFromData(data: NodeData): void {\n        const addNode = (nodeData: NodeData): void => {\n            this.setData(nodeData);\n\n            if (\n                isNodeRecordWithChildren(nodeData) &&\n                nodeData.children.length\n            ) {\n                addChildren(nodeData.children);\n            }\n        };\n\n        const addChildren = (childrenData: NodeData[]): void => {\n            for (const child of childrenData) {\n                const node = this.createNode();\n                node.initFromData(child);\n                this.addChild(node);\n            }\n        };\n\n        addNode(data);\n    }\n\n    public isFolder(): boolean {\n        return this.hasChildren() || this.load_on_demand;\n    }\n\n    public isParentOf(node: Node): boolean {\n        let parent = node.parent;\n\n        while (parent) {\n            if (parent === this) {\n                return true;\n            }\n\n            parent = parent.parent;\n        }\n\n        return false;\n    }\n\n    /*\n    Iterate over all the nodes in the tree.\n\n    Calls callback with (node, level).\n\n    The callback must return true to continue the iteration on current node.\n\n    tree.iterate(\n        function(node, level) {\n           console.log(node.name);\n\n           // stop iteration after level 2\n           return (level <= 2);\n        }\n    );\n\n    */\n    public iterate(callback: IterateCallback): void {\n        const _iterate = (node: Node, level: number): void => {\n            for (const child of node.children) {\n                const result = callback(child, level);\n\n                if (result && child.hasChildren()) {\n                    _iterate(child, level + 1);\n                }\n            }\n        };\n\n        _iterate(this, 0);\n    }\n\n    /*\n    Create tree from data.\n\n    Structure of data is:\n    [\n        {\n            name: 'node1',\n            children: [\n                { name: 'child1' },\n                { name: 'child2' }\n            ]\n        },\n        {\n            name: 'node2'\n        }\n    ]\n    */\n    public loadFromData(data: NodeData[]): this {\n        this.removeChildren();\n\n        for (const childData of data) {\n            const node = this.createNode(childData);\n            this.addChild(node);\n\n            if (isNodeRecordWithChildren(childData)) {\n                node.loadFromData(childData.children);\n            }\n        }\n\n        return this;\n    }\n\n    /*\n    Move node relative to another node.\n\n    Argument position: Position.BEFORE, Position.AFTER or Position.Inside\n\n    // move node1 after node2\n    tree.moveNode(node1, node2, Position.AFTER);\n    */\n    public moveNode(\n        movedNode: Node,\n        targetNode: Node,\n        position: Position,\n    ): boolean {\n        if (!movedNode.parent || movedNode.isParentOf(targetNode)) {\n            // - Node is parent of target node\n            // - Or, parent is empty\n            return false;\n        } else {\n            movedNode.parent.doRemoveChild(movedNode);\n\n            switch (position) {\n                case \"after\": {\n                    if (targetNode.parent) {\n                        targetNode.parent.addChildAtPosition(\n                            movedNode,\n                            targetNode.parent.getChildIndex(targetNode) + 1,\n                        );\n                        return true;\n                    }\n                    return false;\n                }\n\n                case \"before\": {\n                    if (targetNode.parent) {\n                        targetNode.parent.addChildAtPosition(\n                            movedNode,\n                            targetNode.parent.getChildIndex(targetNode),\n                        );\n                        return true;\n                    }\n                    return false;\n                }\n\n                case \"inside\": {\n                    // move inside as first child\n                    targetNode.addChildAtPosition(movedNode, 0);\n                    return true;\n                }\n            }\n        }\n    }\n\n    public prepend(nodeInfo: NodeData): Node {\n        const node = this.createNode(nodeInfo);\n        this.addChildAtPosition(node, 0);\n\n        node.loadChildrenFromData(nodeInfo);\n        return node;\n    }\n\n    public remove(): void {\n        if (this.parent) {\n            this.parent.removeChild(this);\n            this.parent = null;\n        }\n    }\n\n    /*\n    Remove child. This also removes the children of the node.\n\n    tree.removeChild(tree.children[0]);\n    */\n    public removeChild(node: Node): void {\n        // remove children from the index\n        node.removeChildren();\n\n        this.doRemoveChild(node);\n    }\n\n    public removeChildren(): void {\n        this.iterate((child: Node) => {\n            this.tree?.removeNodeFromIndex(child);\n            return true;\n        });\n\n        this.children = [];\n    }\n\n    public removeNodeFromIndex(node: Node): void {\n        if (node.id != null) {\n            this.idMapping.delete(node.id);\n        }\n    }\n\n    /*\n    Set the data of this node.\n\n    setData(string): set the name of the node\n    setData(object): set attributes of the node\n\n    Examples:\n        setData('node1')\n\n        setData({ name: 'node1', id: 1});\n\n        setData({ name: 'node2', id: 2, color: 'green'});\n\n    * This is an internal function; it is not in the docs\n    * Does not remove existing node values\n    */\n    public setData(o: NodeData | null): void {\n        if (!o) {\n            return;\n        } else if (typeof o === \"string\") {\n            this.name = o;\n        } else if (typeof o === \"object\") {\n            for (const key in o) {\n                if (Object.prototype.hasOwnProperty.call(o, key)) {\n                    const value = o[key];\n\n                    if (key === \"label\" || key === \"name\") {\n                        // You can use the 'label' key instead of 'name'; this is a legacy feature\n                        if (typeof value === \"string\") {\n                            this.name = value;\n                        }\n                    } else if (key !== \"children\" && key !== \"parent\") {\n                        // You can't update the children or the parent using this function\n                        this[key] = value;\n                    }\n                }\n            }\n        }\n    }\n\n    private createNode(nodeData?: NodeData): Node {\n        const nodeClass = this.getNodeClass();\n        return new nodeClass(nodeData);\n    }\n\n    private doRemoveChild(node: Node): void {\n        this.children.splice(this.getChildIndex(node), 1);\n        this.tree?.removeNodeFromIndex(node);\n    }\n\n    private getNodeClass(): typeof Node {\n        return this.nodeClass ?? this.tree?.nodeClass ?? Node;\n    }\n\n    // Load children data from nodeInfo if it has children\n    private loadChildrenFromData(nodeInfo: NodeData) {\n        if (isNodeRecordWithChildren(nodeInfo) && nodeInfo.children.length) {\n            this.loadFromData(nodeInfo.children);\n        }\n    }\n\n    private setParent(parent: Node): void {\n        this.parent = parent;\n        this.tree = parent.tree;\n        this.tree?.addNodeToIndex(this);\n    }\n}\n","import { DropHint } from \"../dragAndDropHandler/types\";\n\nclass BorderDropHint implements DropHint {\n    private hint?: HTMLElement;\n\n    constructor(element: HTMLElement, scrollLeft: number) {\n        const div = element.querySelector(\":scope > .jqtree-element\");\n\n        if (!div) {\n            this.hint = undefined;\n            return;\n        }\n\n        const width = Math.max(element.offsetWidth + scrollLeft - 4, 0);\n        const height = Math.max(element.clientHeight - 4, 0);\n\n        const hint = document.createElement(\"span\");\n        hint.className = \"jqtree-border\";\n        hint.style.width = `${width}px`;\n        hint.style.height = `${height}px`;\n\n        this.hint = hint;\n\n        div.append(this.hint);\n    }\n\n    public remove(): void {\n        this.hint?.remove();\n    }\n}\n\nexport default BorderDropHint;\n","import { DropHint } from \"../dragAndDropHandler/types\";\nimport { Node, Position } from \"../node\";\n\nclass GhostDropHint implements DropHint {\n    private element: HTMLElement;\n    private ghost: HTMLElement;\n    private node: Node;\n\n    constructor(node: Node, element: HTMLElement, position: Position) {\n        this.element = element;\n        this.node = node;\n        this.ghost = this.createGhostElement();\n\n        switch (position) {\n            case \"after\":\n                this.moveAfter();\n                break;\n\n            case \"before\":\n                this.moveBefore();\n                break;\n\n            case \"inside\": {\n                if (node.isFolder() && node.is_open) {\n                    this.moveInsideOpenFolder();\n                } else {\n                    this.moveInside();\n                }\n            }\n        }\n    }\n\n    public remove(): void {\n        this.ghost.remove();\n    }\n\n    private createGhostElement() {\n        const ghost = document.createElement(\"li\");\n        ghost.className = \"jqtree_common jqtree-ghost\";\n\n        const circleSpan = document.createElement(\"span\");\n        circleSpan.className = \"jqtree_common jqtree-circle\";\n        ghost.append(circleSpan);\n\n        const lineSpan = document.createElement(\"span\");\n        lineSpan.className = \"jqtree_common jqtree-line\";\n        ghost.append(lineSpan);\n\n        return ghost;\n    }\n\n    private moveAfter(): void {\n        this.element.after(this.ghost);\n    }\n\n    private moveBefore(): void {\n        this.element.before(this.ghost);\n    }\n\n    private moveInside(): void {\n        this.element.after(this.ghost);\n        this.ghost.classList.add(\"jqtree-inside\");\n    }\n\n    private moveInsideOpenFolder(): void {\n        const childElement = this.node.children[0]?.element;\n\n        if (childElement) {\n            childElement.before(this.ghost);\n        }\n    }\n}\n\nexport default GhostDropHint;\n","import { DropHint } from \"../dragAndDropHandler/types\";\nimport { GetScrollLeft } from \"../jqtreeMethodTypes\";\nimport { Node, Position } from \"../node\";\nimport BorderDropHint from \"./borderDropHint\";\nimport GhostDropHint from \"./ghostDropHint\";\n\nexport interface NodeElementParams {\n    getScrollLeft: GetScrollLeft;\n    node: Node;\n    tabIndex?: number;\n    treeElement: HTMLElement;\n}\n\nclass NodeElement {\n    public element: HTMLElement;\n    public node: Node;\n    private getScrollLeft: GetScrollLeft;\n    private tabIndex?: number;\n    private treeElement: HTMLElement;\n\n    constructor({\n        getScrollLeft,\n        node,\n        tabIndex,\n        treeElement,\n    }: NodeElementParams) {\n        this.getScrollLeft = getScrollLeft;\n        this.tabIndex = tabIndex;\n        this.treeElement = treeElement;\n\n        this.init(node);\n    }\n\n    public addDropHint(position: Position): DropHint {\n        if (this.mustShowBorderDropHint(position)) {\n            return new BorderDropHint(this.element, this.getScrollLeft());\n        } else {\n            return new GhostDropHint(this.node, this.element, position);\n        }\n    }\n\n    public deselect(): void {\n        this.element.classList.remove(\"jqtree-selected\");\n\n        const titleSpan = this.getTitleSpan();\n        titleSpan.removeAttribute(\"tabindex\");\n        titleSpan.setAttribute(\"aria-selected\", \"false\");\n\n        titleSpan.blur();\n    }\n\n    public init(node: Node): void {\n        this.node = node;\n\n        node.element ??= this.treeElement;\n\n        this.element = node.element;\n    }\n\n    public select(mustSetFocus: boolean): void {\n        this.element.classList.add(\"jqtree-selected\");\n\n        const titleSpan = this.getTitleSpan();\n        const tabIndex = this.tabIndex;\n\n        // Check for null or undefined\n        if (tabIndex != null) {\n            titleSpan.setAttribute(\"tabindex\", tabIndex.toString());\n        }\n\n        titleSpan.setAttribute(\"aria-selected\", \"true\");\n\n        if (mustSetFocus) {\n            titleSpan.focus();\n        }\n    }\n\n    protected getTitleSpan(): HTMLSpanElement {\n        return this.element.querySelector(\n            \":scope > .jqtree-element > span.jqtree-title\",\n        ) as HTMLSpanElement;\n    }\n\n    protected getUl(): HTMLUListElement {\n        return this.element.querySelector(\":scope > ul\") as HTMLUListElement;\n    }\n\n    protected mustShowBorderDropHint(position: Position): boolean {\n        return position === \"inside\";\n    }\n}\n\nexport default NodeElement;\n","import { OnFinishOpenNode, TriggerEvent } from \"../jqtreeMethodTypes\";\nimport { Position } from \"../node\";\nimport NodeElement, { NodeElementParams } from \"./index\";\n\ninterface FolderElementParams extends NodeElementParams {\n    closedIconElement?: HTMLElement | Text;\n    openedIconElement?: HTMLElement | Text;\n    triggerEvent: TriggerEvent;\n}\n\nclass FolderElement extends NodeElement {\n    private closedIconElement?: HTMLElement | Text;\n    private openedIconElement?: HTMLElement | Text;\n    private triggerEvent: TriggerEvent;\n\n    constructor({\n        closedIconElement,\n        getScrollLeft,\n        node,\n        openedIconElement,\n        tabIndex,\n        treeElement,\n        triggerEvent,\n    }: FolderElementParams) {\n        super({\n            getScrollLeft,\n            node,\n            tabIndex,\n            treeElement,\n        });\n\n        this.closedIconElement = closedIconElement;\n        this.openedIconElement = openedIconElement;\n        this.triggerEvent = triggerEvent;\n    }\n\n    public close(slide: boolean, animationSpeed: JQuery.Duration): void {\n        if (!this.node.is_open) {\n            return;\n        }\n\n        this.node.is_open = false;\n\n        const button = this.getButton();\n        button.classList.add(\"jqtree-closed\");\n        button.innerHTML = \"\";\n\n        const closedIconElement = this.closedIconElement;\n\n        if (closedIconElement) {\n            const icon = closedIconElement.cloneNode(true);\n            button.appendChild(icon);\n        }\n\n        const doClose = (): void => {\n            this.element.classList.add(\"jqtree-closed\");\n\n            const titleSpan = this.getTitleSpan();\n            titleSpan.setAttribute(\"aria-expanded\", \"false\");\n\n            this.triggerEvent(\"tree.close\", {\n                node: this.node,\n            });\n        };\n\n        if (slide) {\n            jQuery(this.getUl()).slideUp(animationSpeed, doClose);\n        } else {\n            jQuery(this.getUl()).hide();\n            doClose();\n        }\n    }\n\n    public open(\n        onFinished: OnFinishOpenNode | undefined,\n        slide: boolean,\n        animationSpeed: JQuery.Duration,\n    ): void {\n        if (this.node.is_open) {\n            return;\n        }\n\n        this.node.is_open = true;\n\n        const button = this.getButton();\n        button.classList.remove(\"jqtree-closed\");\n        button.innerHTML = \"\";\n\n        const openedIconElement = this.openedIconElement;\n\n        if (openedIconElement) {\n            const icon = openedIconElement.cloneNode(true);\n            button.appendChild(icon);\n        }\n\n        const doOpen = (): void => {\n            this.element.classList.remove(\"jqtree-closed\");\n\n            const titleSpan = this.getTitleSpan();\n            titleSpan.setAttribute(\"aria-expanded\", \"true\");\n\n            if (onFinished) {\n                onFinished(this.node);\n            }\n\n            this.triggerEvent(\"tree.open\", {\n                node: this.node,\n            });\n        };\n\n        if (slide) {\n            jQuery(this.getUl()).slideDown(animationSpeed, doOpen);\n        } else {\n            jQuery(this.getUl()).show();\n            doOpen();\n        }\n    }\n\n    protected mustShowBorderDropHint(position: Position): boolean {\n        return !this.node.is_open && position === \"inside\";\n    }\n\n    private getButton(): HTMLLinkElement {\n        return this.element.querySelector(\n            \":scope > .jqtree-element > a.jqtree-toggler\",\n        ) as HTMLLinkElement;\n    }\n}\n\nexport default FolderElement;\n","import {\n    AddToSelection,\n    GetNodeById,\n    GetSelectedNodes,\n    GetTree,\n    OpenNode,\n    RefreshElements,\n    RemoveFromSelection,\n} from \"./jqtreeMethodTypes\";\nimport { OnGetStateFromStorage, OnSetStateFromStorage } from \"./jqtreeOptions\";\nimport { Node } from \"./node\";\nimport { isInt } from \"./util\";\n\nexport interface SavedState {\n    open_nodes?: NodeId[];\n    selected_node?: NodeId[];\n}\n\ninterface SaveStateHandlerParams {\n    addToSelection: AddToSelection;\n    getNodeById: GetNodeById;\n    getSelectedNodes: GetSelectedNodes;\n    getTree: GetTree;\n    onGetStateFromStorage?: OnGetStateFromStorage;\n    onSetStateFromStorage?: OnSetStateFromStorage;\n    openNode: OpenNode;\n    refreshElements: RefreshElements;\n    removeFromSelection: RemoveFromSelection;\n    saveState: boolean | string;\n}\n\nexport default class SaveStateHandler {\n    private addToSelection: AddToSelection;\n    private getNodeById: GetNodeById;\n    private getSelectedNodes: GetSelectedNodes;\n    private getTree: GetTree;\n    private onGetStateFromStorage?: OnGetStateFromStorage;\n    private onSetStateFromStorage?: OnSetStateFromStorage;\n    private openNode: OpenNode;\n    private refreshElements: RefreshElements;\n    private removeFromSelection: RemoveFromSelection;\n    private saveStateOption: boolean | string;\n\n    constructor({\n        addToSelection,\n        getNodeById,\n        getSelectedNodes,\n        getTree,\n        onGetStateFromStorage,\n        onSetStateFromStorage,\n        openNode,\n        refreshElements,\n        removeFromSelection,\n        saveState,\n    }: SaveStateHandlerParams) {\n        this.addToSelection = addToSelection;\n        this.getNodeById = getNodeById;\n        this.getSelectedNodes = getSelectedNodes;\n        this.getTree = getTree;\n        this.onGetStateFromStorage = onGetStateFromStorage;\n        this.onSetStateFromStorage = onSetStateFromStorage;\n        this.openNode = openNode;\n        this.refreshElements = refreshElements;\n        this.removeFromSelection = removeFromSelection;\n        this.saveStateOption = saveState;\n    }\n\n    public getNodeIdToBeSelected(): NodeId | null {\n        const state = this.getStateFromStorage();\n\n        if (state?.selected_node) {\n            return state.selected_node[0] ?? null;\n        } else {\n            return null;\n        }\n    }\n\n    public getState(): SavedState {\n        const getOpenNodeIds = (): NodeId[] => {\n            const openNodes: NodeId[] = [];\n\n            this.getTree()?.iterate((node: Node) => {\n                if (node.is_open && node.id && node.hasChildren()) {\n                    openNodes.push(node.id);\n                }\n                return true;\n            });\n\n            return openNodes;\n        };\n\n        const getSelectedNodeIds = (): NodeId[] => {\n            const selectedNodeIds: NodeId[] = [];\n\n            this.getSelectedNodes().forEach((node) => {\n                if (node.id != null) {\n                    selectedNodeIds.push(node.id);\n                }\n            });\n\n            return selectedNodeIds;\n        };\n\n        return {\n            open_nodes: getOpenNodeIds(),\n            selected_node: getSelectedNodeIds(),\n        };\n    }\n\n    public getStateFromStorage(): null | SavedState {\n        const jsonData = this.loadFromStorage();\n\n        if (jsonData) {\n            return this.parseState(jsonData) as unknown as SavedState;\n        } else {\n            return null;\n        }\n    }\n\n    public saveState(): void {\n        const state = JSON.stringify(this.getState());\n\n        if (this.onSetStateFromStorage) {\n            this.onSetStateFromStorage(state);\n        } else {\n            localStorage.setItem(this.getKeyName(), state);\n        }\n    }\n\n    /*\n    Set initial state\n    Don't handle nodes that are loaded on demand\n\n    result: must load on demand (boolean)\n    */\n    public setInitialState(state: SavedState): boolean {\n        let mustLoadOnDemand = false;\n\n        if (state.open_nodes) {\n            mustLoadOnDemand = this.openInitialNodes(state.open_nodes);\n        }\n\n        this.resetSelection();\n\n        if (state.selected_node) {\n            this.selectInitialNodes(state.selected_node);\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    public setInitialStateOnDemand(\n        state: SavedState,\n        cbFinished: () => void,\n    ): void {\n        let loadingCount = 0;\n        let nodeIds = state.open_nodes;\n\n        const openNodes = (): void => {\n            if (!nodeIds) {\n                return;\n            }\n\n            const newNodesIds = [];\n\n            for (const nodeId of nodeIds) {\n                const node = this.getNodeById(nodeId);\n\n                if (!node) {\n                    newNodesIds.push(nodeId);\n                } else {\n                    if (!node.is_loading) {\n                        if (node.load_on_demand) {\n                            loadAndOpenNode(node);\n                        } else {\n                            this.openNode(node, false);\n                        }\n                    }\n                }\n            }\n\n            nodeIds = newNodesIds;\n\n            if (state.selected_node) {\n                if (this.selectInitialNodes(state.selected_node)) {\n                    this.refreshElements(null);\n                }\n            }\n\n            if (loadingCount === 0) {\n                cbFinished();\n            }\n        };\n\n        const loadAndOpenNode = (node: Node): void => {\n            loadingCount += 1;\n            this.openNode(node, false, () => {\n                loadingCount -= 1;\n                openNodes();\n            });\n        };\n\n        openNodes();\n    }\n\n    private getKeyName(): string {\n        if (typeof this.saveStateOption === \"string\") {\n            return this.saveStateOption;\n        } else {\n            return \"tree\";\n        }\n    }\n\n    private loadFromStorage(): null | string {\n        if (this.onGetStateFromStorage) {\n            return this.onGetStateFromStorage();\n        } else {\n            return localStorage.getItem(this.getKeyName());\n        }\n    }\n\n    private openInitialNodes(nodeIds: NodeId[]): boolean {\n        let mustLoadOnDemand = false;\n\n        for (const nodeId of nodeIds) {\n            const node = this.getNodeById(nodeId);\n\n            if (node) {\n                if (!node.load_on_demand) {\n                    node.is_open = true;\n                } else {\n                    mustLoadOnDemand = true;\n                }\n            }\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    private parseState(jsonData: string): SavedState {\n        const state = JSON.parse(jsonData) as Record<string, unknown>;\n\n        // Check if selected_node is an int (instead of an array)\n        if (state.selected_node && isInt(state.selected_node)) {\n            // Convert to array\n            state.selected_node = [state.selected_node];\n        }\n\n        return state as unknown as SavedState;\n    }\n\n    private resetSelection(): void {\n        const selectedNodes = this.getSelectedNodes();\n\n        selectedNodes.forEach((node) => {\n            this.removeFromSelection(node);\n        });\n    }\n\n    private selectInitialNodes(nodeIds: NodeId[]): boolean {\n        let selectCount = 0;\n\n        for (const nodeId of nodeIds) {\n            const node = this.getNodeById(nodeId);\n\n            if (node) {\n                selectCount += 1;\n\n                this.addToSelection(node);\n            }\n        }\n\n        return selectCount !== 0;\n    }\n}\n","export type HorizontalScrollDirection = \"left\" | \"right\";\nexport type VerticalScrollDirection = \"bottom\" | \"top\";\n\ninterface ConstructorParams {\n    container: HTMLElement;\n    refreshHitAreas: () => void;\n}\n\nexport abstract class ScrollParent {\n    protected container: HTMLElement;\n    protected horizontalScrollDirection?: HorizontalScrollDirection;\n    protected horizontalScrollTimeout?: number;\n\n    protected refreshHitAreas: () => void;\n    protected verticalScrollDirection?: VerticalScrollDirection;\n    protected verticalScrollTimeout?: number;\n\n    constructor({ container, refreshHitAreas }: ConstructorParams) {\n        this.container = container;\n        this.refreshHitAreas = refreshHitAreas;\n    }\n\n    public checkHorizontalScrolling(pageX: number): void {\n        const newHorizontalScrollDirection =\n            this.getNewHorizontalScrollDirection(pageX);\n\n        if (this.horizontalScrollDirection !== newHorizontalScrollDirection) {\n            this.horizontalScrollDirection = newHorizontalScrollDirection;\n\n            if (this.horizontalScrollTimeout != null) {\n                window.clearTimeout(this.horizontalScrollTimeout);\n            }\n\n            if (newHorizontalScrollDirection) {\n                this.horizontalScrollTimeout = window.setTimeout(\n                    this.scrollHorizontally.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public checkVerticalScrolling(pageY: number) {\n        const newVerticalScrollDirection =\n            this.getNewVerticalScrollDirection(pageY);\n\n        if (this.verticalScrollDirection !== newVerticalScrollDirection) {\n            this.verticalScrollDirection = newVerticalScrollDirection;\n\n            if (this.verticalScrollTimeout != null) {\n                window.clearTimeout(this.verticalScrollTimeout);\n                this.verticalScrollTimeout = undefined;\n            }\n\n            if (newVerticalScrollDirection) {\n                this.verticalScrollTimeout = window.setTimeout(\n                    this.scrollVertically.bind(this),\n                    40,\n                );\n            }\n        }\n    }\n\n    public getScrollLeft(): number {\n        return this.container.scrollLeft;\n    }\n\n    public scrollToY(top: number): void {\n        this.container.scrollTop = top;\n    }\n\n    public stopScrolling() {\n        this.horizontalScrollDirection = undefined;\n        this.verticalScrollDirection = undefined;\n    }\n\n    protected abstract getNewHorizontalScrollDirection(\n        pageX: number,\n    ): HorizontalScrollDirection | undefined;\n    protected abstract getNewVerticalScrollDirection(\n        pageY: number,\n    ): undefined | VerticalScrollDirection;\n\n    protected scrollHorizontally() {\n        if (!this.horizontalScrollDirection) {\n            return;\n        }\n\n        const distance = this.horizontalScrollDirection === \"left\" ? -20 : 20;\n        this.container.scrollBy({\n            behavior: \"instant\",\n            left: distance,\n            top: 0,\n        });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollHorizontally.bind(this), 40);\n    }\n\n    protected scrollVertically() {\n        if (!this.verticalScrollDirection) {\n            return;\n        }\n\n        const distance = this.verticalScrollDirection === \"top\" ? -20 : 20;\n        this.container.scrollBy({\n            behavior: \"instant\",\n            left: 0,\n            top: distance,\n        });\n\n        this.refreshHitAreas();\n\n        setTimeout(this.scrollVertically.bind(this), 40);\n    }\n}\n","import { getElementPosition, getOffsetTop } from \"../util\";\nimport {\n    HorizontalScrollDirection,\n    ScrollParent,\n    VerticalScrollDirection,\n} from \"./scrollParent\";\n\nexport default class ContainerScrollParent extends ScrollParent {\n    private scrollParentBottom?: number;\n    private scrollParentTop?: number;\n\n    public stopScrolling() {\n        super.stopScrolling();\n\n        this.horizontalScrollDirection = undefined;\n        this.verticalScrollDirection = undefined;\n    }\n\n    protected getNewHorizontalScrollDirection(\n        pageX: number,\n    ): HorizontalScrollDirection | undefined {\n        const scrollParentOffset = getElementPosition(this.container);\n        const containerWidth = this.container.getBoundingClientRect().width;\n\n        const rightEdge = scrollParentOffset.left + containerWidth;\n        const leftEdge = scrollParentOffset.left;\n        const isNearRightEdge = pageX > rightEdge - 20;\n        const isNearLeftEdge = pageX < leftEdge + 20;\n\n        if (isNearRightEdge) {\n            return \"right\";\n        } else if (isNearLeftEdge) {\n            return \"left\";\n        }\n\n        return undefined;\n    }\n\n    protected getNewVerticalScrollDirection(\n        pageY: number,\n    ): undefined | VerticalScrollDirection {\n        if (pageY < this.getScrollParentTop()) {\n            return \"top\";\n        }\n\n        if (pageY > this.getScrollParentBottom()) {\n            return \"bottom\";\n        }\n\n        return undefined;\n    }\n\n    private getScrollParentBottom() {\n        if (this.scrollParentBottom == null) {\n            const containerHeight =\n                this.container.getBoundingClientRect().height;\n            this.scrollParentBottom =\n                this.getScrollParentTop() + containerHeight;\n        }\n\n        return this.scrollParentBottom;\n    }\n\n    private getScrollParentTop() {\n        this.scrollParentTop ??= getOffsetTop(this.container);\n\n        return this.scrollParentTop;\n    }\n}\n","import { getOffsetTop } from \"../util\";\nimport {\n    HorizontalScrollDirection,\n    ScrollParent,\n    VerticalScrollDirection,\n} from \"./scrollParent\";\n\ninterface Params {\n    refreshHitAreas: () => void;\n    treeElement: HTMLElement;\n}\n\nexport default class DocumentScrollParent extends ScrollParent {\n    private documentScrollHeight?: number;\n    private documentScrollWidth?: number;\n    private treeElement: HTMLElement;\n\n    constructor({ refreshHitAreas, treeElement }: Params) {\n        super({ container: document.documentElement, refreshHitAreas });\n\n        this.treeElement = treeElement;\n    }\n\n    public scrollToY(top: number): void {\n        const treeTop = getOffsetTop(this.treeElement);\n\n        super.scrollToY(top + treeTop);\n    }\n\n    public stopScrolling() {\n        super.stopScrolling();\n\n        this.documentScrollHeight = undefined;\n        this.documentScrollWidth = undefined;\n    }\n\n    protected getNewHorizontalScrollDirection(\n        pageX: number,\n    ): HorizontalScrollDirection | undefined {\n        const scrollLeft = this.container.scrollLeft;\n        const windowWidth = window.innerWidth;\n\n        const isNearRightEdge = pageX > windowWidth - 20;\n        const isNearLeftEdge = pageX - scrollLeft < 20;\n\n        if (isNearRightEdge && this.canScrollRight()) {\n            return \"right\";\n        }\n\n        if (isNearLeftEdge) {\n            return \"left\";\n        }\n\n        return undefined;\n    }\n\n    protected getNewVerticalScrollDirection(\n        pageY: number,\n    ): undefined | VerticalScrollDirection {\n        const scrollTop = this.container.scrollTop;\n        const distanceTop = pageY - scrollTop;\n\n        if (distanceTop < 20) {\n            return \"top\";\n        }\n\n        const windowHeight = window.innerHeight;\n\n        if (windowHeight - (pageY - scrollTop) < 20 && this.canScrollDown()) {\n            return \"bottom\";\n        }\n\n        return undefined;\n    }\n\n    private canScrollDown() {\n        return (\n            this.container.scrollTop + this.container.clientHeight <\n            this.getDocumentScrollHeight()\n        );\n    }\n\n    private canScrollRight() {\n        return (\n            this.container.scrollLeft + this.container.clientWidth <\n            this.getDocumentScrollWidth()\n        );\n    }\n\n    private getDocumentScrollHeight() {\n        // Store the original scroll height because the scroll height can increase when the drag element is moved beyond the scroll height.\n        this.documentScrollHeight ??= this.container.scrollHeight;\n\n        return this.documentScrollHeight;\n    }\n\n    private getDocumentScrollWidth() {\n        // Store the original scroll width because the scroll width can increase when the drag element is moved beyond the scroll width.\n        this.documentScrollWidth ??= this.container.scrollWidth;\n\n        return this.documentScrollWidth;\n    }\n}\n","import type { ScrollParent } from \"./scrollParent\";\n\nimport ContainerScrollParent from \"./containerScrollParent\";\nimport DocumentScrollParent from \"./documentScrollParent\";\n\nconst isOverflow = (overflowValue: string) =>\n    overflowValue === \"auto\" || overflowValue === \"scroll\";\n\nconst hasOverFlow = (element: HTMLElement): boolean => {\n    const style = getComputedStyle(element);\n\n    return isOverflow(style.overflowX) || isOverflow(style.overflowY);\n};\n\nconst getParentWithOverflow = (\n    treeElement: HTMLElement,\n): HTMLElement | null => {\n    if (hasOverFlow(treeElement)) {\n        return treeElement;\n    }\n\n    let parent = treeElement.parentElement;\n\n    while (parent) {\n        if (hasOverFlow(parent)) {\n            return parent;\n        }\n\n        parent = parent.parentElement;\n    }\n\n    return null;\n};\n\nconst createScrollParent = (\n    treeElement: HTMLElement,\n    refreshHitAreas: () => void,\n): ScrollParent => {\n    const container = getParentWithOverflow(treeElement);\n\n    if (container && container.tagName !== \"HTML\") {\n        return new ContainerScrollParent({\n            container,\n            refreshHitAreas,\n        });\n    } else {\n        return new DocumentScrollParent({ refreshHitAreas, treeElement });\n    }\n};\n\nexport default createScrollParent;\n","import { PositionInfo } from \"./mouseUtils\";\nimport createScrollParent from \"./scrollHandler/createScrollParent\";\nimport { ScrollParent } from \"./scrollHandler/scrollParent\";\n\ninterface ScrollHandlerParams {\n    refreshHitAreas: () => void;\n    treeElement: HTMLElement;\n}\n\nexport default class ScrollHandler {\n    private refreshHitAreas: () => void;\n    private scrollParent?: ScrollParent;\n    private treeElement: HTMLElement;\n\n    constructor({ refreshHitAreas, treeElement }: ScrollHandlerParams) {\n        this.refreshHitAreas = refreshHitAreas;\n        this.scrollParent = undefined;\n        this.treeElement = treeElement;\n    }\n\n    public checkScrolling(positionInfo: PositionInfo): void {\n        this.checkVerticalScrolling(positionInfo);\n        this.checkHorizontalScrolling(positionInfo);\n    }\n\n    public getScrollLeft(): number {\n        return this.getScrollParent().getScrollLeft();\n    }\n\n    public scrollToY(top: number): void {\n        this.getScrollParent().scrollToY(top);\n    }\n\n    public stopScrolling() {\n        this.getScrollParent().stopScrolling();\n    }\n\n    private checkHorizontalScrolling(positionInfo: PositionInfo): void {\n        this.getScrollParent().checkHorizontalScrolling(positionInfo.pageX);\n    }\n\n    private checkVerticalScrolling(positionInfo: PositionInfo): void {\n        this.getScrollParent().checkVerticalScrolling(positionInfo.pageY);\n    }\n\n    private getScrollParent(): ScrollParent {\n        this.scrollParent ??= createScrollParent(\n            this.treeElement,\n            this.refreshHitAreas,\n        );\n\n        return this.scrollParent;\n    }\n}\n","import { GetNodeById } from \"./jqtreeMethodTypes\";\nimport { Node } from \"./node\";\n\ninterface SelectNodeHandlerParameters {\n    getNodeById: GetNodeById;\n}\n\nexport default class SelectNodeHandler {\n    private getNodeById: GetNodeById;\n    private selectedNodes: Set<NodeId>;\n    private selectedSingleNode: Node | null;\n\n    constructor({ getNodeById }: SelectNodeHandlerParameters) {\n        this.getNodeById = getNodeById;\n        this.selectedNodes = new Set<NodeId>();\n        this.clear();\n    }\n\n    public addToSelection(node: Node): void {\n        if (node.id != null) {\n            this.selectedNodes.add(node.id);\n        } else {\n            this.selectedSingleNode = node;\n        }\n    }\n\n    public clear(): void {\n        this.selectedNodes.clear();\n        this.selectedSingleNode = null;\n    }\n\n    public getSelectedNode(): false | Node {\n        const selectedNodes = this.getSelectedNodes();\n\n        if (selectedNodes.length) {\n            return selectedNodes[0] ?? false;\n        } else {\n            return false;\n        }\n    }\n\n    public getSelectedNodes(): Node[] {\n        if (this.selectedSingleNode) {\n            return [this.selectedSingleNode];\n        } else {\n            const selectedNodes: Node[] = [];\n\n            this.selectedNodes.forEach((id) => {\n                const node = this.getNodeById(id);\n                if (node) {\n                    selectedNodes.push(node);\n                }\n            });\n\n            return selectedNodes;\n        }\n    }\n\n    public getSelectedNodesUnder(parent: Node): Node[] {\n        if (this.selectedSingleNode) {\n            if (parent.isParentOf(this.selectedSingleNode)) {\n                return [this.selectedSingleNode];\n            } else {\n                return [];\n            }\n        } else {\n            const selectedNodes: Node[] = [];\n\n            this.selectedNodes.forEach((id) => {\n                const node = this.getNodeById(id);\n                if (node && parent.isParentOf(node)) {\n                    selectedNodes.push(node);\n                }\n            });\n\n            return selectedNodes;\n        }\n    }\n\n    public isNodeSelected(node: Node): boolean {\n        if (node.id != null) {\n            return this.selectedNodes.has(node.id);\n        } else if (this.selectedSingleNode) {\n            return this.selectedSingleNode.element === node.element;\n        } else {\n            return false;\n        }\n    }\n\n    public removeFromSelection(node: Node, includeChildren = false): void {\n        if (node.id == null) {\n            if (\n                this.selectedSingleNode &&\n                node.element === this.selectedSingleNode.element\n            ) {\n                this.selectedSingleNode = null;\n            }\n        } else {\n            this.selectedNodes.delete(node.id);\n\n            if (includeChildren) {\n                node.iterate(() => {\n                    if (node.id != null) {\n                        this.selectedNodes.delete(node.id);\n                    }\n                    return true;\n                });\n            }\n        }\n    }\n}\n","const register = (widgetClass: unknown, widgetName: string): void => {\n    const getDataKey = (): string => `simple_widget_${widgetName}`;\n\n    const getWidgetData = (\n        el: HTMLElement,\n        dataKey: string,\n    ): null | SimpleWidget<unknown> => {\n        const widget = jQuery.data(el, dataKey) as unknown;\n\n        if (widget && widget instanceof SimpleWidget) {\n            return widget;\n        } else {\n            return null;\n        }\n    };\n\n    const createWidget = ($el: JQuery, options: unknown): JQuery => {\n        const dataKey = getDataKey();\n\n        for (const el of $el.get()) {\n            const existingWidget = getWidgetData(el, dataKey);\n\n            if (!existingWidget) {\n                const simpleWidgetClass = widgetClass as typeof SimpleWidget;\n                const widget = new simpleWidgetClass(el, options);\n\n                if (!jQuery.data(el, dataKey)) {\n                    jQuery.data(el, dataKey, widget);\n                }\n\n                // Call init after setting data, so we can call methods\n                widget.init();\n            }\n        }\n\n        return $el;\n    };\n\n    const destroyWidget = ($el: JQuery): void => {\n        const dataKey = getDataKey();\n\n        for (const el of $el.get()) {\n            const widget = getWidgetData(el, dataKey);\n\n            if (widget) {\n                widget.destroy();\n            }\n\n            jQuery.removeData(el, dataKey);\n        }\n    };\n\n    const callFunction = (\n        $el: JQuery,\n        functionName: string,\n        args: unknown[],\n    ): unknown => {\n        let result = null;\n\n        for (const el of $el.get()) {\n            const widget = jQuery.data(el, getDataKey()) as unknown;\n\n            if (widget && widget instanceof SimpleWidget) {\n                const simpleWidget = widget as SimpleWidget<unknown>;\n                const widgetFunction = simpleWidget[functionName];\n\n                if (widgetFunction && typeof widgetFunction === \"function\") {\n                    result = widgetFunction.apply(widget, args) as unknown;\n                }\n            }\n        }\n\n        return result;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    (jQuery.fn as any)[widgetName] = function (\n        this: JQuery,\n        argument1: unknown,\n        ...args: unknown[]\n    ) {\n        if (!argument1) {\n            return createWidget(this, null);\n        } else if (typeof argument1 === \"object\") {\n            const options = argument1 as unknown;\n            return createWidget(this, options);\n        } else if (typeof argument1 === \"string\" && argument1[0] !== \"_\") {\n            const functionName = argument1;\n\n            if (argument1 === \"destroy\") {\n                destroyWidget(this);\n                return undefined;\n            } else {\n                return callFunction(this, functionName, args);\n            }\n        } else {\n            return undefined;\n        }\n    };\n};\n\nexport default class SimpleWidget<WidgetOptions> {\n    [key: string]: unknown;\n\n    protected static defaults: unknown = {};\n\n    public $el: JQuery;\n\n    public options: WidgetOptions;\n\n    constructor(el: HTMLElement, options: WidgetOptions) {\n        this.$el = jQuery(el);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const defaults = (this.constructor as any).defaults as WidgetOptions;\n        this.options = { ...defaults, ...options };\n    }\n\n    public static register(widgetClass: unknown, widgetName: string): void {\n        register(widgetClass, widgetName);\n    }\n\n    public deinit(): void {\n        //\n    }\n\n    public destroy(): void {\n        this.deinit();\n    }\n\n    public init(): void {\n        //\n    }\n}\n","const version = \"1.8.10\";\n\nexport default version;\n","import DataLoader, { HandleFinishedLoading } from \"./dataLoader\";\nimport { DragAndDropHandler } from \"./dragAndDropHandler\";\nimport ElementsRenderer from \"./elementsRenderer\";\nimport { OnFinishOpenNode } from \"./jqtreeMethodTypes\";\nimport { JQTreeOptions } from \"./jqtreeOptions\";\nimport KeyHandler from \"./keyHandler\";\nimport MouseHandler from \"./mouseHandler\";\nimport { PositionInfo } from \"./mouseUtils\";\nimport { Node, Position } from \"./node\";\nimport NodeElement from \"./nodeElement\";\nimport FolderElement from \"./nodeElement/folderElement\";\nimport SaveStateHandler, { SavedState } from \"./saveStateHandler\";\nimport ScrollHandler from \"./scrollHandler\";\nimport SelectNodeHandler from \"./selectNodeHandler\";\nimport SimpleWidget from \"./simple.widget\";\nimport { getOffsetTop, isFunction } from \"./util\";\nimport __version__ from \"./version\";\n\ninterface SelectNodeOptions {\n    mustSetFocus?: boolean;\n    mustToggle?: boolean;\n}\n\nconst NODE_PARAM_IS_EMPTY = \"Node parameter is empty\";\nconst PARAM_IS_EMPTY = \"Parameter is empty: \";\n\nexport class JqTreeWidget extends SimpleWidget<JQTreeOptions> {\n    protected static defaults: JQTreeOptions = {\n        animationSpeed: \"fast\",\n        autoEscape: true,\n        autoOpen: false, // true / false / int (open n levels starting at 0)\n        buttonLeft: true,\n        // The symbol to use for a closed node - ► BLACK RIGHT-POINTING POINTER\n        // http://www.fileformat.info/info/unicode/char/25ba/index.htm\n        closedIcon: undefined,\n        data: undefined,\n        dataFilter: undefined,\n        dataUrl: undefined,\n        dragAndDrop: false,\n        keyboardSupport: true,\n        nodeClass: Node,\n        onCanMove: undefined, // Can this node be moved?\n        onCanMoveTo: undefined, // Can this node be moved to this position? function(moved_node, target_node, position)\n        onCanSelectNode: undefined,\n        onCreateLi: undefined,\n        onDragMove: undefined,\n        onDragStop: undefined,\n        onGetStateFromStorage: undefined,\n        onIsMoveHandle: undefined,\n        onLoadFailed: undefined,\n        onLoading: undefined,\n        onSetStateFromStorage: undefined,\n        openedIcon: \"&#x25bc;\",\n        openFolderDelay: 500, // The delay for opening a folder during drag and drop; the value is in milliseconds\n        // The symbol to use for an open node - ▼ BLACK DOWN-POINTING TRIANGLE\n        // http://www.fileformat.info/info/unicode/char/25bc/index.htm\n        rtl: undefined, // right-to-left support; true / false (default)\n        saveState: false, // true / false / string (cookie name)\n        selectable: true,\n        showEmptyFolder: false,\n        slide: true, // must display slide animation?\n        startDndDelay: 300, // The delay for starting dnd (in milliseconds)\n        tabIndex: 0,\n        useContextMenu: true,\n    };\n\n    private dataLoader: DataLoader;\n    private dndHandler: DragAndDropHandler;\n    private element: JQuery;\n\n    private isInitialized: boolean;\n    private keyHandler: KeyHandler;\n    private mouseHandler: MouseHandler;\n    private renderer: ElementsRenderer;\n    private saveStateHandler: SaveStateHandler;\n    private scrollHandler: ScrollHandler;\n    private selectNodeHandler: SelectNodeHandler;\n    private tree: Node;\n\n    public addNodeAfter(\n        newNodeInfo: NodeData,\n        existingNode: Node,\n    ): Node | null {\n        const newNode = existingNode.addAfter(newNodeInfo);\n\n        if (newNode) {\n            this.refreshElements(existingNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addNodeBefore(\n        newNodeInfo: NodeData,\n        existingNode?: Node,\n    ): Node | null {\n        if (!existingNode) {\n            throw Error(PARAM_IS_EMPTY + \"existingNode\");\n        }\n\n        const newNode = existingNode.addBefore(newNodeInfo);\n\n        if (newNode) {\n            this.refreshElements(existingNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addParentNode(\n        newNodeInfo: NodeData,\n        existingNode?: Node,\n    ): Node | null {\n        if (!existingNode) {\n            throw Error(PARAM_IS_EMPTY + \"existingNode\");\n        }\n\n        const newNode = existingNode.addParent(newNodeInfo);\n\n        if (newNode) {\n            this.refreshElements(newNode.parent);\n        }\n\n        return newNode;\n    }\n\n    public addToSelection(node?: Node, mustSetFocus?: boolean): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        this.selectNodeHandler.addToSelection(node);\n        this.openParents(node);\n\n        this.getNodeElementForNode(node).select(mustSetFocus ?? true);\n\n        this.saveState();\n\n        return this.element;\n    }\n\n    public appendNode(newNodeInfo: NodeData, parentNodeParam?: Node): Node {\n        const parentNode = parentNodeParam ?? this.tree;\n\n        const node = parentNode.append(newNodeInfo);\n\n        this.refreshElements(parentNode);\n\n        return node;\n    }\n\n    public closeNode(node?: Node, slideParam?: boolean | null): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const slide = slideParam ?? this.options.slide;\n\n        if (node.isFolder() || node.isEmptyFolder) {\n            this.createFolderElement(node).close(\n                slide,\n                this.options.animationSpeed,\n            );\n\n            this.saveState();\n        }\n\n        return this.element;\n    }\n\n    public deinit(): void {\n        this.element.empty();\n        this.element.off();\n\n        this.keyHandler.deinit();\n        this.mouseHandler.deinit();\n\n        this.tree = new Node({}, true);\n\n        super.deinit();\n    }\n\n    public getNodeByCallback(callback: (node: Node) => boolean): Node | null {\n        return this.tree.getNodeByCallback(callback);\n    }\n\n    public getNodeByHtmlElement(\n        inputElement: HTMLElement | JQuery,\n    ): Node | null {\n        const element =\n            inputElement instanceof HTMLElement\n                ? inputElement\n                : inputElement.get(0);\n\n        if (!element) {\n            return null;\n        }\n\n        return this.getNode(element);\n    }\n\n    public getNodeById(nodeId: NodeId): Node | null {\n        return this.tree.getNodeById(nodeId);\n    }\n\n    public getNodeByName(name: string): Node | null {\n        return this.tree.getNodeByName(name);\n    }\n\n    public getNodeByNameMustExist(name: string): Node {\n        return this.tree.getNodeByNameMustExist(name);\n    }\n\n    public getNodesByProperty(key: string, value: unknown): Node[] {\n        return this.tree.getNodesByProperty(key, value);\n    }\n\n    public getSelectedNode(): false | Node {\n        return this.selectNodeHandler.getSelectedNode();\n    }\n\n    public getSelectedNodes(): Node[] {\n        return this.selectNodeHandler.getSelectedNodes();\n    }\n\n    public getState(): null | SavedState {\n        return this.saveStateHandler.getState();\n    }\n\n    public getStateFromStorage(): null | SavedState {\n        return this.saveStateHandler.getStateFromStorage();\n    }\n\n    public getTree(): Node {\n        return this.tree;\n    }\n\n    public getVersion(): string {\n        return __version__;\n    }\n\n    public init(): void {\n        super.init();\n\n        this.element = this.$el;\n        this.isInitialized = false;\n\n        this.options.rtl = this.getRtlOption();\n\n        this.options.closedIcon ??= this.getDefaultClosedIcon();\n\n        this.connectHandlers();\n\n        this.initData();\n    }\n\n    public isDragging(): boolean {\n        return this.dndHandler.isDragging;\n    }\n\n    public isNodeSelected(node?: Node): boolean {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        return this.selectNodeHandler.isNodeSelected(node);\n    }\n\n    public loadData(data: NodeData[], parentNode: Node | null): JQuery {\n        this.doLoadData(data, parentNode);\n        return this.element;\n    }\n\n    /*\n    signatures:\n    - loadDataFromUrl(url, parent_node=null, on_finished=null)\n        loadDataFromUrl('/my_data');\n        loadDataFromUrl('/my_data', node1);\n        loadDataFromUrl('/my_data', node1, function() { console.log('finished'); });\n        loadDataFromUrl('/my_data', null, function() { console.log('finished'); });\n\n    - loadDataFromUrl(parent_node=null, on_finished=null)\n        loadDataFromUrl();\n        loadDataFromUrl(node1);\n        loadDataFromUrl(null, function() { console.log('finished'); });\n        loadDataFromUrl(node1, function() { console.log('finished'); });\n    */\n    public loadDataFromUrl(\n        param1: Node | null | string,\n        param2?: HandleFinishedLoading | Node | null,\n        param3?: HandleFinishedLoading,\n    ): JQuery {\n        if (typeof param1 === \"string\") {\n            // first parameter is url\n            this.doLoadDataFromUrl(\n                param1,\n                param2 as Node | null,\n                param3 ?? null,\n            );\n        } else {\n            // first parameter is not url\n            this.doLoadDataFromUrl(\n                null,\n                param1,\n                param2 as HandleFinishedLoading | null,\n            );\n        }\n\n        return this.element;\n    }\n\n    public moveDown(): JQuery {\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            this.keyHandler.moveDown(selectedNode);\n        }\n\n        return this.element;\n    }\n\n    public moveNode(\n        node?: Node,\n        targetNode?: Node,\n        position?: Position,\n    ): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!targetNode) {\n            throw Error(PARAM_IS_EMPTY + \"targetNode\");\n        }\n\n        if (!position) {\n            throw Error(PARAM_IS_EMPTY + \"position\");\n        }\n\n        this.tree.moveNode(node, targetNode, position);\n        this.refreshElements(null);\n\n        return this.element;\n    }\n\n    public moveUp(): JQuery {\n        const selectedNode = this.getSelectedNode();\n        if (selectedNode) {\n            this.keyHandler.moveUp(selectedNode);\n        }\n\n        return this.element;\n    }\n\n    public openNode(\n        node?: Node,\n        param1?: boolean | OnFinishOpenNode,\n        param2?: OnFinishOpenNode,\n    ): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const parseParams = (): [boolean, OnFinishOpenNode | undefined] => {\n            let onFinished: null | OnFinishOpenNode;\n            let slide: boolean | null;\n\n            if (isFunction(param1)) {\n                onFinished = param1 as OnFinishOpenNode;\n                slide = null;\n            } else {\n                slide = param1 as boolean;\n                onFinished = param2 as OnFinishOpenNode;\n            }\n\n            slide ??= this.options.slide;\n\n            return [slide, onFinished];\n        };\n\n        const [slide, onFinished] = parseParams();\n\n        this.openNodeInternal(node, slide, onFinished);\n        return this.element;\n    }\n\n    public prependNode(newNodeInfo: NodeData, parentNodeParam?: Node): Node {\n        const parentNode = parentNodeParam ?? this.tree;\n\n        const node = parentNode.prepend(newNodeInfo);\n\n        this.refreshElements(parentNode);\n\n        return node;\n    }\n\n    public refresh(): JQuery {\n        this.refreshElements(null);\n        return this.element;\n    }\n\n    public refreshHitAreas(): JQuery {\n        this.dndHandler.refresh();\n        return this.element;\n    }\n\n    public reload(onFinished: HandleFinishedLoading | null): JQuery {\n        this.doLoadDataFromUrl(null, null, onFinished);\n        return this.element;\n    }\n\n    public removeFromSelection(node?: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        this.selectNodeHandler.removeFromSelection(node);\n\n        this.getNodeElementForNode(node).deselect();\n        this.saveState();\n\n        return this.element;\n    }\n\n    public removeNode(node?: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!node.parent) {\n            throw Error(\"Node has no parent\");\n        }\n\n        this.selectNodeHandler.removeFromSelection(node, true); // including children\n\n        const parent = node.parent;\n        node.remove();\n        this.refreshElements(parent);\n\n        return this.element;\n    }\n\n    public scrollToNode(node?: Node): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!node.element) {\n            return this.element;\n        }\n\n        const top =\n            getOffsetTop(node.element) -\n            getOffsetTop(this.$el.get(0) as HTMLElement);\n\n        this.scrollHandler.scrollToY(top);\n\n        return this.element;\n    }\n\n    public selectNode(\n        node: Node | null,\n        optionsParam?: SelectNodeOptions,\n    ): JQuery {\n        this.doSelectNode(node, optionsParam);\n        return this.element;\n    }\n\n    public setOption(option: string, value: unknown): JQuery {\n        (this.options as unknown as Record<string, unknown>)[option] = value;\n        return this.element;\n    }\n\n    public setState(state?: SavedState): JQuery {\n        if (state) {\n            this.saveStateHandler.setInitialState(state);\n            this.refreshElements(null);\n        }\n\n        return this.element;\n    }\n\n    public toggle(node?: Node, slideParam: boolean | null = null): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        const slide = slideParam ?? this.options.slide;\n\n        if (node.is_open) {\n            this.closeNode(node, slide);\n        } else {\n            this.openNode(node, slide);\n        }\n\n        return this.element;\n    }\n\n    public toJson(): string {\n        return JSON.stringify(this.tree.getData());\n    }\n\n    public updateNode(node?: Node, data?: NodeData): JQuery {\n        if (!node) {\n            throw Error(NODE_PARAM_IS_EMPTY);\n        }\n\n        if (!data) {\n            return this.element;\n        }\n\n        const idIsChanged =\n            typeof data === \"object\" && data.id && data.id !== node.id;\n\n        if (idIsChanged) {\n            this.tree.removeNodeFromIndex(node);\n        }\n\n        node.setData(data);\n\n        if (idIsChanged) {\n            this.tree.addNodeToIndex(node);\n        }\n\n        if (\n            typeof data === \"object\" &&\n            data.children &&\n            data.children instanceof Array\n        ) {\n            node.removeChildren();\n\n            if (data.children.length) {\n                node.loadFromData(data.children as Node[]);\n            }\n        }\n\n        this.refreshElements(node);\n\n        return this.element;\n    }\n\n    private connectHandlers() {\n        const {\n            autoEscape,\n            buttonLeft,\n            closedIcon,\n            dataFilter,\n            dragAndDrop,\n            keyboardSupport,\n            onCanMove,\n            onCanMoveTo,\n            onCreateLi,\n            onDragMove,\n            onDragStop,\n            onGetStateFromStorage,\n            onIsMoveHandle,\n            onLoadFailed,\n            onLoading,\n            onSetStateFromStorage,\n            openedIcon,\n            openFolderDelay,\n            rtl,\n            saveState,\n            showEmptyFolder,\n            slide,\n            tabIndex,\n        } = this.options;\n\n        const closeNode = this.closeNode.bind(this);\n        const getNodeElement = this.getNodeElement.bind(this);\n        const getNodeElementForNode = this.getNodeElementForNode.bind(this);\n        const getNodeById = this.getNodeById.bind(this);\n        const getSelectedNode = this.getSelectedNode.bind(this);\n        const getTree = this.getTree.bind(this);\n        const isFocusOnTree = this.isFocusOnTree.bind(this);\n        const loadData = this.loadData.bind(this);\n        const openNode = this.openNodeInternal.bind(this);\n        const refreshElements = this.refreshElements.bind(this);\n        const refreshHitAreas = this.refreshHitAreas.bind(this);\n        const selectNode = this.selectNode.bind(this);\n        const $treeElement = this.element;\n        const treeElement = this.element.get(0) as HTMLElement;\n        const triggerEvent = this.triggerEvent.bind(this);\n\n        const selectNodeHandler = new SelectNodeHandler({\n            getNodeById,\n        });\n\n        const addToSelection =\n            selectNodeHandler.addToSelection.bind(selectNodeHandler);\n        const getSelectedNodes =\n            selectNodeHandler.getSelectedNodes.bind(selectNodeHandler);\n        const isNodeSelected =\n            selectNodeHandler.isNodeSelected.bind(selectNodeHandler);\n        const removeFromSelection =\n            selectNodeHandler.removeFromSelection.bind(selectNodeHandler);\n        const getMouseDelay = () => this.options.startDndDelay ?? 0;\n\n        const dataLoader = new DataLoader({\n            dataFilter,\n            loadData,\n            onLoadFailed,\n            onLoading,\n            treeElement,\n            triggerEvent,\n        });\n\n        const saveStateHandler = new SaveStateHandler({\n            addToSelection,\n            getNodeById,\n            getSelectedNodes,\n            getTree,\n            onGetStateFromStorage,\n            onSetStateFromStorage,\n            openNode,\n            refreshElements,\n            removeFromSelection,\n            saveState,\n        });\n\n        const scrollHandler = new ScrollHandler({\n            refreshHitAreas,\n            treeElement,\n        });\n\n        const getScrollLeft = scrollHandler.getScrollLeft.bind(scrollHandler);\n\n        const dndHandler = new DragAndDropHandler({\n            autoEscape,\n            getNodeElement,\n            getNodeElementForNode,\n            getScrollLeft,\n            getTree,\n            onCanMove,\n            onCanMoveTo,\n            onDragMove,\n            onDragStop,\n            onIsMoveHandle,\n            openFolderDelay,\n            openNode,\n            refreshElements,\n            slide,\n            treeElement,\n            triggerEvent,\n        });\n\n        const keyHandler = new KeyHandler({\n            closeNode,\n            getSelectedNode,\n            isFocusOnTree,\n            keyboardSupport,\n            openNode,\n            selectNode,\n        });\n\n        const renderer = new ElementsRenderer({\n            $element: $treeElement,\n            autoEscape,\n            buttonLeft,\n            closedIcon,\n            dragAndDrop,\n            getTree,\n            isNodeSelected,\n            onCreateLi,\n            openedIcon,\n            rtl,\n            showEmptyFolder,\n            tabIndex,\n        });\n\n        const getNode = this.getNode.bind(this);\n        const onMouseCapture = this.mouseCapture.bind(this);\n        const onMouseDrag = this.mouseDrag.bind(this);\n        const onMouseStart = this.mouseStart.bind(this);\n        const onMouseStop = this.mouseStop.bind(this);\n\n        const mouseHandler = new MouseHandler({\n            element: treeElement,\n            getMouseDelay,\n            getNode,\n            onClickButton: this.toggle.bind(this),\n            onClickTitle: this.doSelectNode.bind(this),\n            onMouseCapture,\n            onMouseDrag,\n            onMouseStart,\n            onMouseStop,\n            triggerEvent,\n            useContextMenu: this.options.useContextMenu,\n        });\n\n        this.dataLoader = dataLoader;\n        this.dndHandler = dndHandler;\n        this.keyHandler = keyHandler;\n        this.mouseHandler = mouseHandler;\n        this.renderer = renderer;\n        this.saveStateHandler = saveStateHandler;\n        this.scrollHandler = scrollHandler;\n        this.selectNodeHandler = selectNodeHandler;\n    }\n\n    private containsElement(element: HTMLElement): boolean {\n        const node = this.getNode(element);\n\n        return node != null && node.tree === this.tree;\n    }\n\n    private createFolderElement(node: Node) {\n        const closedIconElement = this.renderer.closedIconElement;\n        const getScrollLeft = this.scrollHandler.getScrollLeft.bind(\n            this.scrollHandler,\n        );\n        const openedIconElement = this.renderer.openedIconElement;\n        const tabIndex = this.options.tabIndex;\n        const treeElement = this.element.get(0) as HTMLElement;\n        const triggerEvent = this.triggerEvent.bind(this);\n\n        return new FolderElement({\n            closedIconElement,\n            getScrollLeft,\n            node,\n            openedIconElement,\n            tabIndex,\n            treeElement,\n            triggerEvent,\n        });\n    }\n\n    private createNodeElement(node: Node) {\n        const getScrollLeft = this.scrollHandler.getScrollLeft.bind(\n            this.scrollHandler,\n        );\n        const tabIndex = this.options.tabIndex;\n        const treeElement = this.element.get(0) as HTMLElement;\n\n        return new NodeElement({\n            getScrollLeft,\n            node,\n            tabIndex,\n            treeElement,\n        });\n    }\n\n    private deselectCurrentNode(): void {\n        const node = this.getSelectedNode();\n        if (node) {\n            this.removeFromSelection(node);\n        }\n    }\n\n    private deselectNodes(parentNode: Node): void {\n        const selectedNodesUnderParent =\n            this.selectNodeHandler.getSelectedNodesUnder(parentNode);\n        for (const n of selectedNodesUnderParent) {\n            this.selectNodeHandler.removeFromSelection(n);\n        }\n    }\n\n    private doLoadData(data: NodeData[] | null, parentNode: Node | null): void {\n        if (data) {\n            if (parentNode) {\n                this.deselectNodes(parentNode);\n                this.loadSubtree(data, parentNode);\n            } else {\n                this.initTree(data);\n            }\n\n            if (this.isDragging()) {\n                this.dndHandler.refresh();\n            }\n        }\n\n        this.triggerEvent(\"tree.load_data\", {\n            parent_node: parentNode,\n            tree_data: data,\n        });\n    }\n\n    private doLoadDataFromUrl(\n        urlInfoParam: JQuery.AjaxSettings | null | string,\n        parentNode: Node | null,\n        onFinished: HandleFinishedLoading | null,\n    ): void {\n        const urlInfo = urlInfoParam ?? this.getDataUrlInfo(parentNode);\n\n        this.dataLoader.loadFromUrl(urlInfo, parentNode, onFinished);\n    }\n\n    private doSelectNode(\n        node: Node | null,\n        optionsParam?: SelectNodeOptions,\n    ): void {\n        const saveState = (): void => {\n            if (this.options.saveState) {\n                this.saveStateHandler.saveState();\n            }\n        };\n\n        if (!node) {\n            // Called with empty node -> deselect current node\n            this.deselectCurrentNode();\n            saveState();\n            return;\n        }\n        const defaultOptions = { mustSetFocus: true, mustToggle: true };\n        const selectOptions = { ...defaultOptions, ...(optionsParam ?? {}) };\n\n        const canSelect = (): boolean => {\n            if (this.options.onCanSelectNode) {\n                return (\n                    this.options.selectable &&\n                    this.options.onCanSelectNode(node)\n                );\n            } else {\n                return this.options.selectable;\n            }\n        };\n\n        if (!canSelect()) {\n            return;\n        }\n\n        if (this.selectNodeHandler.isNodeSelected(node)) {\n            if (selectOptions.mustToggle) {\n                this.deselectCurrentNode();\n                this.triggerEvent(\"tree.select\", {\n                    node: null,\n                    previous_node: node,\n                });\n            }\n        } else {\n            const deselectedNode = this.getSelectedNode() || null;\n            this.deselectCurrentNode();\n            this.addToSelection(node, selectOptions.mustSetFocus);\n\n            this.triggerEvent(\"tree.select\", {\n                deselected_node: deselectedNode,\n                node,\n            });\n            this.openParents(node);\n        }\n\n        saveState();\n    }\n\n    private getAutoOpenMaxLevel(): number {\n        if (this.options.autoOpen === true) {\n            return -1;\n        } else if (typeof this.options.autoOpen === \"number\") {\n            return this.options.autoOpen;\n        } else if (typeof this.options.autoOpen === \"string\") {\n            return parseInt(this.options.autoOpen, 10);\n        } else {\n            return 0;\n        }\n    }\n\n    private getDataUrlInfo(node: Node | null): JQuery.AjaxSettings | null {\n        const dataUrl =\n            this.options.dataUrl ?? (this.element.data(\"url\") as null | string);\n\n        const getUrlFromString = (url: string): JQuery.AjaxSettings => {\n            const urlInfo: JQuery.AjaxSettings = { url };\n\n            setUrlInfoData(urlInfo);\n\n            return urlInfo;\n        };\n\n        const setUrlInfoData = (urlInfo: JQuery.AjaxSettings): void => {\n            if (node?.id) {\n                // Load on demand of a subtree; add node parameter\n                const data = { node: node.id };\n                urlInfo.data = data;\n            } else {\n                // Add selected_node parameter\n                const selectedNodeId = this.getNodeIdToBeSelected();\n                if (selectedNodeId) {\n                    const data = { selected_node: selectedNodeId };\n                    urlInfo.data = data;\n                }\n            }\n        };\n\n        if (typeof dataUrl === \"function\") {\n            return dataUrl(node);\n        } else if (typeof dataUrl === \"string\") {\n            return getUrlFromString(dataUrl);\n        } else if (dataUrl && typeof dataUrl === \"object\") {\n            setUrlInfoData(dataUrl);\n            return dataUrl;\n        } else {\n            return null;\n        }\n    }\n\n    private getDefaultClosedIcon(): string {\n        if (this.options.rtl) {\n            // triangle to the left\n            return \"&#x25c0;\";\n        } else {\n            // triangle to the right\n            return \"&#x25ba;\";\n        }\n    }\n\n    private getNode(element: HTMLElement): Node | null {\n        const liElement = element.closest(\"li.jqtree_common\");\n\n        if (liElement) {\n            return jQuery(liElement).data(\"node\") as Node;\n        } else {\n            return null;\n        }\n    }\n\n    private getNodeElement(element: HTMLElement): NodeElement | null {\n        const node = this.getNode(element);\n        if (node) {\n            return this.getNodeElementForNode(node);\n        } else {\n            return null;\n        }\n    }\n\n    private getNodeElementForNode(node: Node): NodeElement {\n        if (node.isFolder()) {\n            return this.createFolderElement(node);\n        } else {\n            return this.createNodeElement(node);\n        }\n    }\n\n    private getNodeIdToBeSelected(): NodeId | null {\n        if (this.options.saveState) {\n            return this.saveStateHandler.getNodeIdToBeSelected();\n        } else {\n            return null;\n        }\n    }\n\n    private getRtlOption(): boolean {\n        if (this.options.rtl != null) {\n            return this.options.rtl;\n        } else {\n            const dataRtl = this.element.data(\"rtl\") as unknown;\n\n            if (\n                dataRtl !== null &&\n                dataRtl !== false &&\n                dataRtl !== undefined\n            ) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    private initData(): void {\n        if (this.options.data) {\n            this.doLoadData(this.options.data, null);\n        } else {\n            const dataUrl = this.getDataUrlInfo(null);\n\n            if (dataUrl) {\n                this.doLoadDataFromUrl(null, null, null);\n            } else {\n                this.doLoadData([], null);\n            }\n        }\n    }\n\n    private initTree(data: NodeData[]): void {\n        const doInit = (): void => {\n            if (!this.isInitialized) {\n                this.isInitialized = true;\n                this.triggerEvent(\"tree.init\");\n            }\n        };\n\n        this.tree = new this.options.nodeClass(\n            null,\n            true,\n            this.options.nodeClass,\n        );\n\n        this.selectNodeHandler.clear();\n\n        this.tree.loadFromData(data);\n\n        const mustLoadOnDemand = this.setInitialState();\n\n        this.refreshElements(null);\n\n        if (!mustLoadOnDemand) {\n            doInit();\n        } else {\n            // Load data on demand and then init the tree\n            this.setInitialStateOnDemand(doInit);\n        }\n    }\n\n    private isFocusOnTree(): boolean {\n        const activeElement = document.activeElement;\n\n        return Boolean(\n            activeElement &&\n                activeElement.tagName === \"SPAN\" &&\n                this.containsElement(activeElement as HTMLElement),\n        );\n    }\n\n    private isSelectedNodeInSubtree(subtree: Node): boolean {\n        const selectedNode = this.getSelectedNode();\n\n        if (!selectedNode) {\n            return false;\n        } else {\n            return subtree === selectedNode || subtree.isParentOf(selectedNode);\n        }\n    }\n\n    private loadFolderOnDemand(\n        node: Node,\n        slide = true,\n        onFinished?: OnFinishOpenNode,\n    ): void {\n        node.is_loading = true;\n\n        this.doLoadDataFromUrl(null, node, () => {\n            this.openNodeInternal(node, slide, onFinished);\n        });\n    }\n\n    private loadSubtree(data: NodeData[], parentNode: Node): void {\n        parentNode.loadFromData(data);\n\n        parentNode.load_on_demand = false;\n        parentNode.is_loading = false;\n\n        this.refreshElements(parentNode);\n    }\n\n    private mouseCapture(positionInfo: PositionInfo): boolean | null {\n        if (this.options.dragAndDrop) {\n            return this.dndHandler.mouseCapture(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    private mouseDrag(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            const result = this.dndHandler.mouseDrag(positionInfo);\n\n            this.scrollHandler.checkScrolling(positionInfo);\n            return result;\n        } else {\n            return false;\n        }\n    }\n\n    private mouseStart(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            return this.dndHandler.mouseStart(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    private mouseStop(positionInfo: PositionInfo): boolean {\n        if (this.options.dragAndDrop) {\n            this.scrollHandler.stopScrolling();\n            return this.dndHandler.mouseStop(positionInfo);\n        } else {\n            return false;\n        }\n    }\n\n    private openNodeInternal(\n        node: Node,\n        slide = true,\n        onFinished?: OnFinishOpenNode,\n    ): void {\n        const doOpenNode = (\n            _node: Node,\n            _slide: boolean,\n            _onFinished?: OnFinishOpenNode,\n        ): void => {\n            if (!node.children.length) {\n                return;\n            }\n\n            const folderElement = this.createFolderElement(_node);\n            folderElement.open(\n                _onFinished,\n                _slide,\n                this.options.animationSpeed,\n            );\n        };\n\n        if (node.isFolder() || node.isEmptyFolder) {\n            if (node.load_on_demand) {\n                this.loadFolderOnDemand(node, slide, onFinished);\n            } else {\n                let parent = node.parent;\n\n                while (parent) {\n                    // nb: do not open root element\n                    if (parent.parent) {\n                        doOpenNode(parent, false);\n                    }\n                    parent = parent.parent;\n                }\n\n                doOpenNode(node, slide, onFinished);\n                this.saveState();\n            }\n        }\n    }\n\n    private openParents(node: Node) {\n        const parent = node.parent;\n\n        if (parent?.parent && !parent.is_open) {\n            this.openNode(parent, false);\n        }\n    }\n\n    /*\n    Redraw the tree or part of the tree.\n     from_node: redraw this subtree\n    */\n    private refreshElements(fromNode: Node | null): void {\n        const mustSetFocus = this.isFocusOnTree();\n        const mustSelect = fromNode\n            ? this.isSelectedNodeInSubtree(fromNode)\n            : false;\n\n        this.renderer.render(fromNode);\n\n        if (mustSelect) {\n            this.selectCurrentNode(mustSetFocus);\n        }\n\n        this.triggerEvent(\"tree.refresh\");\n    }\n\n    private saveState(): void {\n        if (this.options.saveState) {\n            this.saveStateHandler.saveState();\n        }\n    }\n\n    private selectCurrentNode(mustSetFocus: boolean): void {\n        const node = this.getSelectedNode();\n        if (node) {\n            const nodeElement = this.getNodeElementForNode(node);\n            nodeElement.select(mustSetFocus);\n        }\n    }\n\n    // Set initial state, either by restoring the state or auto-opening nodes\n    // result: must load nodes on demand?\n    private setInitialState(): boolean {\n        const restoreState = (): [boolean, boolean] => {\n            // result: is state restored, must load on demand?\n            if (!this.options.saveState) {\n                return [false, false];\n            } else {\n                const state = this.saveStateHandler.getStateFromStorage();\n\n                if (!state) {\n                    return [false, false];\n                } else {\n                    const mustLoadOnDemand =\n                        this.saveStateHandler.setInitialState(state);\n\n                    // return true: the state is restored\n                    return [true, mustLoadOnDemand];\n                }\n            }\n        };\n\n        const autoOpenNodes = (): boolean => {\n            // result: must load on demand?\n            if (this.options.autoOpen === false) {\n                return false;\n            }\n\n            const maxLevel = this.getAutoOpenMaxLevel();\n            let mustLoadOnDemand = false;\n\n            this.tree.iterate((node: Node, level: number) => {\n                if (node.load_on_demand) {\n                    mustLoadOnDemand = true;\n                    return false;\n                } else if (!node.hasChildren()) {\n                    return false;\n                } else {\n                    node.is_open = true;\n                    return level !== maxLevel;\n                }\n            });\n\n            return mustLoadOnDemand;\n        };\n\n        let [isRestored, mustLoadOnDemand] = restoreState(); // eslint-disable-line prefer-const\n\n        if (!isRestored) {\n            mustLoadOnDemand = autoOpenNodes();\n        }\n\n        return mustLoadOnDemand;\n    }\n\n    // Set the initial state for nodes that are loaded on demand\n    // Call cb_finished when done\n    private setInitialStateOnDemand(cbFinished: () => void): void {\n        const restoreState = (): boolean => {\n            if (!this.options.saveState) {\n                return false;\n            } else {\n                const state = this.saveStateHandler.getStateFromStorage();\n\n                if (!state) {\n                    return false;\n                } else {\n                    this.saveStateHandler.setInitialStateOnDemand(\n                        state,\n                        cbFinished,\n                    );\n\n                    return true;\n                }\n            }\n        };\n\n        const autoOpenNodes = (): void => {\n            const maxLevel = this.getAutoOpenMaxLevel();\n            let loadingCount = 0;\n\n            const loadAndOpenNode = (node: Node): void => {\n                loadingCount += 1;\n                this.openNodeInternal(node, false, () => {\n                    loadingCount -= 1;\n                    openNodes();\n                });\n            };\n\n            const openNodes = (): void => {\n                this.tree.iterate((node: Node, level: number) => {\n                    if (node.load_on_demand) {\n                        if (!node.is_loading) {\n                            loadAndOpenNode(node);\n                        }\n\n                        return false;\n                    } else {\n                        this.openNodeInternal(node, false);\n\n                        return level !== maxLevel;\n                    }\n                });\n\n                if (loadingCount === 0) {\n                    cbFinished();\n                }\n            };\n\n            openNodes();\n        };\n\n        if (!restoreState()) {\n            autoOpenNodes();\n        }\n    }\n\n    private triggerEvent(\n        eventName: string,\n        values?: Record<string, unknown>,\n    ): JQuery.Event {\n        const event = jQuery.Event(eventName, values);\n        this.element.trigger(event);\n        return event;\n    }\n}\n\nSimpleWidget.register(JqTreeWidget, \"tree\");\n"],"names":["DataLoader","constructor","dataFilter","loadData","onLoadFailed","onLoading","treeElement","triggerEvent","loadFromUrl","urlInfo","parentNode","onFinished","element","getDomElement","addLoadingClass","notifyLoading","stopLoading","removeLoadingClass","handleSuccess","data","parseData","handleError","jqXHR","submitRequest","classList","add","isLoading","node","$el","jQuery","getParsedData","JSON","parse","parsedData","remove","urlInfoInput","url","ajaxSettings","cache","dataType","error","method","success","toUpperCase","ajax","isInt","n","isFunction","v","getBoolString","value","getOffsetTop","getElementPosition","top","rect","getBoundingClientRect","left","x","window","scrollX","y","scrollY","binarySearch","items","compareFn","low","high","length","mid","item","undefined","compareResult","DragElement","autoEscape","nodeName","offsetX","offsetY","createElement","appendChild","move","pageX","pageY","style","document","textContent","innerHTML","position","iterateVisibleNodes","tree","handleAfterOpenFolder","handleClosedFolder","handleFirstNode","handleNode","handleOpenFolder","isFirstNode","iterate","nextNode","mustIterateInside","is_open","hasChildren","offsetParent","childrenLength","children","forEach","_","i","child","nextChild","generateHitPositions","currentNode","hitPositions","lastTop","addHitPosition","push","height","clientHeight","generateHitAreasForGroup","hitAreas","positionsInGroup","bottom","positionCount","Math","min","areaHeight","round","areaTop","generateHitAreasFromPositions","treeBottom","previousTop","group","generateHitAreas","DragAndDropHandler","getNodeElement","getNodeElementForNode","getScrollLeft","getTree","onCanMove","onCanMoveTo","onDragMove","onDragStop","onIsMoveHandle","openFolderDelay","openNode","refreshElements","slide","hoveredArea","isDragging","currentItem","mouseCapture","positionInfo","target","mustCaptureElement","nodeElement","mouseDrag","dragElement","area","findHoveredArea","canMoveToArea","isFolder","stopOpenFolderTimer","mustOpenFolderTimer","startOpenFolderTimer","updateDropHint","removeDropHint","originalEvent","mouseStart","refresh","name","mouseStop","moveItem","clear","removeHover","removeHitAreas","dimensions","getTreeDimensions","right","treePosition","clientWidth","movedNode","targetNode","previousParent","parent","doMove","moveNode","event","move_info","do_move","moved_node","original_event","previous_parent","target_node","isDefaultPrevented","previousGhost","folder","openFolder","openFolderTimer","setTimeout","clearTimeout","addDropHint","ElementsRenderer","$element","buttonLeft","closedIcon","dragAndDrop","isNodeSelected","onCreateLi","openedIcon","rtl","showEmptyFolder","tabIndex","openedIconElement","createButtonElement","closedIconElement","render","fromNode","renderFromNode","renderFromRoot","$previousLi","li","createLi","getLevel","after","createDomElements","empty","attachNodeData","div","createTextNode","nodeType","isRootNode","level","ul","createUl","createFolderLi","isSelected","buttonClasses","getButtonClasses","folderClasses","getFolderClasses","iconElement","className","setAttribute","buttonLink","cloneNode","titleSpan","createTitleSpan","mustShowFolder","isEmptyFolder","createNodeLi","liClasses","classString","join","classes","setTreeItemAriaAttributes","role","is_loading","KeyHandler","closeNode","getSelectedNode","isFocusOnTree","keyboardSupport","selectNode","originalSelectNode","addEventListener","handleKeyDown","deinit","removeEventListener","moveDown","selectedNode","getNextVisibleNode","moveUp","getPreviousVisibleNode","canHandleKeyboard","e","isKeyHandled","key","moveLeft","moveRight","preventDefault","getParent","getPositionInfoFromMouseEvent","getPositionInfoFromTouch","touch","MouseHandler","getMouseDelay","getNode","onClickButton","onClickTitle","onMouseCapture","onMouseDrag","onMouseStart","onMouseStop","useContextMenu","handleClick","handleDblclick","mouseDown","passive","touchStart","handleContextmenu","isMouseStarted","mouseDelayTimer","isMouseDelayMet","mouseDownInfo","removeMouseMoveEventListeners","getClickTarget","button","closest","type","jqTreeElement","clickTarget","stopPropagation","click_event","handleMouseDown","handleMouseUp","handleStartMouse","handleMouseMove","cancelable","mouseMove","touchMove","mouseUp","touchEnd","mouseDelay","startMouseDelayTimer","result","touches","isNodeRecordWithChildren","Array","Node","nodeData","isRoot","nodeClass","load_on_demand","setData","idMapping","Map","addAfter","nodeInfo","createNode","childIndex","getChildIndex","addChildAtPosition","loadChildrenFromData","addBefore","addChild","setParent","index","splice","addNodeToIndex","id","set","addParent","newParent","originalParent","append","filter","f","indexOf","getData","includeParent","getDataFromNodes","nodes","map","tmpNode","k","Object","prototype","hasOwnProperty","call","getLastChild","lastChild","getNextNode","includeChildren","nextSibling","getNextSibling","nextIndex","getNodeByCallback","callback","getNodeById","nodeId","get","getNodeByName","getNodeByNameMustExist","Error","getNodesByProperty","getPreviousNode","previousSibling","getPreviousSibling","previousIndex","initFromData","addNode","addChildren","childrenData","isParentOf","_iterate","loadFromData","removeChildren","childData","doRemoveChild","prepend","removeChild","removeNodeFromIndex","delete","o","getNodeClass","BorderDropHint","scrollLeft","querySelector","hint","width","max","offsetWidth","GhostDropHint","ghost","createGhostElement","moveAfter","moveBefore","moveInsideOpenFolder","moveInside","circleSpan","lineSpan","before","childElement","NodeElement","init","mustShowBorderDropHint","deselect","getTitleSpan","removeAttribute","blur","select","mustSetFocus","toString","focus","getUl","FolderElement","close","animationSpeed","getButton","icon","doClose","slideUp","hide","open","doOpen","slideDown","show","SaveStateHandler","addToSelection","getSelectedNodes","onGetStateFromStorage","onSetStateFromStorage","removeFromSelection","saveState","saveStateOption","getNodeIdToBeSelected","state","getStateFromStorage","selected_node","getState","getOpenNodeIds","openNodes","getSelectedNodeIds","selectedNodeIds","open_nodes","jsonData","loadFromStorage","parseState","stringify","localStorage","setItem","getKeyName","setInitialState","mustLoadOnDemand","openInitialNodes","resetSelection","selectInitialNodes","setInitialStateOnDemand","cbFinished","loadingCount","nodeIds","newNodesIds","loadAndOpenNode","getItem","selectedNodes","selectCount","ScrollParent","container","refreshHitAreas","checkHorizontalScrolling","newHorizontalScrollDirection","getNewHorizontalScrollDirection","horizontalScrollDirection","horizontalScrollTimeout","scrollHorizontally","bind","checkVerticalScrolling","newVerticalScrollDirection","getNewVerticalScrollDirection","verticalScrollDirection","verticalScrollTimeout","scrollVertically","scrollToY","scrollTop","stopScrolling","distance","scrollBy","behavior","ContainerScrollParent","scrollParentOffset","containerWidth","rightEdge","leftEdge","isNearRightEdge","isNearLeftEdge","getScrollParentTop","getScrollParentBottom","scrollParentBottom","containerHeight","scrollParentTop","DocumentScrollParent","documentElement","treeTop","documentScrollHeight","documentScrollWidth","windowWidth","innerWidth","canScrollRight","distanceTop","windowHeight","innerHeight","canScrollDown","getDocumentScrollHeight","getDocumentScrollWidth","scrollHeight","scrollWidth","isOverflow","overflowValue","hasOverFlow","getComputedStyle","overflowX","overflowY","getParentWithOverflow","parentElement","createScrollParent","tagName","ScrollHandler","scrollParent","checkScrolling","getScrollParent","SelectNodeHandler","Set","selectedSingleNode","getSelectedNodesUnder","has","register","widgetClass","widgetName","getDataKey","getWidgetData","el","dataKey","widget","SimpleWidget","createWidget","options","existingWidget","simpleWidgetClass","destroyWidget","destroy","removeData","callFunction","functionName","args","simpleWidget","widgetFunction","apply","fn","argument1","defaults","version","NODE_PARAM_IS_EMPTY","PARAM_IS_EMPTY","JqTreeWidget","autoOpen","dataUrl","onCanSelectNode","selectable","startDndDelay","addNodeAfter","newNodeInfo","existingNode","newNode","addNodeBefore","addParentNode","selectNodeHandler","openParents","appendNode","parentNodeParam","slideParam","createFolderElement","off","keyHandler","mouseHandler","getNodeByHtmlElement","inputElement","HTMLElement","saveStateHandler","getVersion","__version__","isInitialized","getRtlOption","getDefaultClosedIcon","connectHandlers","initData","dndHandler","doLoadData","loadDataFromUrl","param1","param2","param3","doLoadDataFromUrl","parseParams","openNodeInternal","prependNode","reload","removeNode","scrollToNode","scrollHandler","optionsParam","doSelectNode","setOption","option","setState","toggle","toJson","updateNode","idIsChanged","$treeElement","dataLoader","renderer","containsElement","createNodeElement","deselectCurrentNode","deselectNodes","selectedNodesUnderParent","loadSubtree","initTree","parent_node","tree_data","urlInfoParam","getDataUrlInfo","defaultOptions","mustToggle","selectOptions","canSelect","previous_node","deselectedNode","deselected_node","getAutoOpenMaxLevel","parseInt","getUrlFromString","setUrlInfoData","selectedNodeId","liElement","dataRtl","doInit","activeElement","Boolean","isSelectedNodeInSubtree","subtree","loadFolderOnDemand","doOpenNode","_node","_slide","_onFinished","folderElement","mustSelect","selectCurrentNode","restoreState","autoOpenNodes","maxLevel","isRestored","eventName","values","Event","trigger"],"mappings":"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"}