<!-- contents create -->
<div class="modal fade modal-xl" id="contentsCreate" data-bs-keyboard="false" tabindex="-1" aria-labelledby="contentsCreateLabel" data-bs-backdrop="static">
  <div class="modal-dialog modal-fullscreen2">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="contentsCreateLabel">{{ __ 'page.contents.thread.modal.nextCreate.title' }}</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div id="contentsCreateLoading" class="d-flex align-items-center">
          <div class="spinner-border" role="status"></div>
          &nbsp; &nbsp;
          {{ __ 'page.contents.thread.modal.nextCreate.dataLoading' }}
        </div>
        <form class="row g-3 d-none" id="contentsCreateForm" onsubmit="return contentsCreateModal_createContents()">
          <h3 id="contentsCreateTarget"></h3>
          <p id="contentsCreateDescription"></p>
          <hr>
          <div class="row">
            <div class="col-12 mb-3">
              <label for="contentsCreateContentTitle" class="form-label">{{ __ 'page.contents.thread.modal.nextCreate.contentTitle' }}*</label>
              <input type="text" class="form-control" id="contentsCreateContentTitle" required>
            </div>
            <ul class="nav nav-tabs" id="contentsCreateViewTab" role="tablist">
              <li class="nav-item" role="presentation">
                <button class="nav-link active" id="contentsCreateViewTab-source" data-bs-toggle="tab" data-bs-target="#contentsCreateViewTab-source-pane" type="button" role="tab" aria-controls="contentsCreateViewTab-source-pane" aria-selected="true">{{ __ 'page.contents.thread.modal.nextCreate.source' }}</button>
              </li>
              <li class="nav-item" role="presentation">
                <button class="nav-link" id="contentsCreateViewTab-preview" data-bs-toggle="tab" data-bs-target="#contentsCreateViewTab-preview-pane" type="button" role="tab" aria-controls="contentsCreateViewTab-preview-pane" aria-selected="false" onclick="contentsCreateModal_previewContent()">{{ __ 'page.contents.thread.modal.nextCreate.preview' }}</button>
              </li>
            </ul>
            <div class="tab-content" id="contentsCreateViewTabContent">
              <div class="tab-pane fade show active" id="contentsCreateViewTab-source-pane" role="tabpanel" aria-labelledby="contentsCreateViewTab-source" tabindex="0">
                <label for="contentsCreateContent" class="form-label">{{ __ 'page.contents.thread.modal.nextCreate.contentContent' }}*</label>
                <textarea class="form-control" id="contentsCreateContent" rows="6" required></textarea>
              </div>
              <div class="tab-pane fade" id="contentsCreateViewTab-preview-pane" role="tabpanel" aria-labelledby="contentsCreateViewTab-preview" tabindex="0">
                <label for="contentsCreateContentPreview" class="form-label">{{ __ 'page.contents.thread.modal.nextCreate.contentPreview' }}</label>
                <div id="contentsCreateContentPreview" class="border p-2 contents-preview"></div>
              </div>
            </div>
          </div>
          <div class="text-end">{{ __ 'page.contents.thread.modal.nextCreate.contentEssDesc' }}</div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ __ 'page.contents.thread.modal.nextCreate.modalClose' }}</button>
            <button type="submit" class="btn btn-primary" id="contentsCreateSubmit">
              <span id="contentsDoCreateText">{{ __ 'page.contents.thread.modal.nextCreate.doCreate' }}</span>
              <span id="contentsDoCreateSpinner" class="d-none">
                <span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span>
                {{ __ 'page.contents.thread.modal.nextCreate.creating' }}
              </span>
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>
<script>
  function contentsCreateModal_createContents() {
    if (contentsCreateTargetId === '') {
      alert('{{ __ "page.contents.thread.modal.nextCreate.noTargetError" }}');
      return false; // フォーム送信をキャンセル
    }
    const contentTitle = document.getElementById('contentsCreateContentTitle').value;
    const content = document.getElementById('contentsCreateContent').value;
    $("#contentsCreateSubmit").prop("disabled", true);
    $("#contentsDoCreateText").addClass("d-none");
    $("#contentsDoCreateSpinner").removeClass("d-none");
    $.ajax({
      type: 'POST',
      url: '{{ baseUrl }}/api/contents/contentsCreate',
      data: {
        targetContentsId: contentsCreateTargetId,
        contentTitle: contentTitle,
        content: content,
        parser: 'default',
        mode: 'list',
        _csrf: '{{_csrf}}'
      },
      dataType: 'json',
      success: function(data) {
        if (data && !data.error) {
          // 更新成功
          // TODO: コンテンツ更新成功時の処理
          // modalを閉じる
          $('#contentsCreate').modal('hide');
          // reload
          location.reload();          
        }else{
          // TODO: コンテンツ更新失敗時の処理
          alert('{{ __ "page.contents.thread.modal.nextCreate.createError" }}');
        }
      },
      error: function() {
        // TODO: エラーハンドリング
        alert('{{ __ "page.contents.thread.modal.nextCreate.createError" }}');
      },
      complete: function() {
        $("#contentsCreateSubmit").prop("disabled", false);
        $("#contentsDoCreateText").removeClass("d-none");
        $("#contentsDoCreateSpinner").addClass("d-none");
      }
    });
    return false; // フォーム送信をキャンセル
  }
  function contentsCreateModal_previewContent() {
    const content = document.getElementById('contentsCreateContent').value;
    if (content.trim().length === 0) {
      $('#contentsCreateContentPreview').text('{{ __ "page.contents.thread.modal.nextCreate.previewEmpty" }}');
      return;
    }
    $('#contentsCreateContentPreview').text('{{ __ "page.contents.thread.modal.nextCreate.previewLoading" }}');
    $.ajax({
      type: 'POST',
      url: '{{ baseUrl }}/api/contents/parse',
      data: {
        content: content,
        parser: 'default',
        _csrf: '{{_csrf}}'
      },
      dataType: 'json',
      success: function(data) {
        if (data && data.contentsparsed) {
          $('#contentsCreateContentPreview').html(data.contentsparsed);
          // highlight.js
          document.querySelectorAll('#contentsCreateContentPreview pre code').forEach((block) => {
            hljs.highlightElement(block);
          });
        } else {
          $('#contentsCreateContentPreview').text('{{ __ "page.contents.thread.modal.nextCreate.previewError" }}');
        }
      },
      error: function() {
        $('#contentsCreateContentPreview').text('{{ __ "page.contents.thread.modal.nextCreate.previewError" }}');
      }
    });
  }
  let contentsCreateTargetId = '';
  addEventListener("load", (event) => {
    $('#contentsCreate').on('shown.bs.modal', function (event) {
      if (contentsCreateTargetId === '') {
        alert('{{ __ "page.contents.thread.modal.nextCreate.noTargetError" }}');
        $('#contentsCreate').modal('hide');
        return;
      }
      $('#contentsCreateContentTitle').val('');
      $('#contentsCreateContent').val('');
      $('#contentsCreateContentPreview').text('{{ __ "page.contents.thread.modal.nextCreate.previewEmpty" }}');
      $("#contentsCreateSubmit").prop("disabled", false);
      $("#contentsDoCreateText").removeClass("d-none");
      $("#contentsDoCreateSpinner").addClass("d-none");
      $('#contentCreateLoading').removeClass('d-none');
      $('#contentsCreateForm').addClass('d-none');
      $.ajax({
        type: 'GET',
        url: '{{ baseUrl }}/api/contents/info',
        data: {
          contentsId: contentsCreateTargetId,
        },
        dataType: 'json',
        success: function(data) {
          if (data && !data.error) {
            $('#contentsCreateLoading').addClass('d-none');
            $('#contentsCreateForm').removeClass('d-none');
            $('#contentsCreateTarget').text(format_string('{{ __ "page.contents.thread.modal.nextCreate.title" }}', data.title));
            $('#contentsCreateDescription').text(format_string('{{ __ "page.contents.thread.modal.nextCreate.description" }}', data.title));
          } else {
            alert('{{ __ "page.contents.thread.modal.nextCreate.loadError" }}');
            $('#contentsCreate').modal('hide');
          }
        },
        error: function() {
          alert('{{ __ "page.contents.thread.modal.nextCreate.loadError" }}');
          $('#contentsCreate').modal('hide');
        }
      });
    });
  });
  function contentCreateModal_setTarget(id) {
    contentsCreateTargetId = id;
    $('#contentsCreate').modal('show');
  }
</script>