{{> header }}
{{> topNavigator }}

<script>
  addEventListener("load", (event) => {
    const icon1 = document.createElement("i");
    icon1.classList.add("material-icons");
    icon1.textContent = "chevron_right";
    const icon2 = document.createElement("i");
    icon2.classList.add("material-icons");
    icon2.textContent = "expand_more";
    $('#tree').tree({
      closedIcon: icon1,
      openedIcon: icon2,
      saveState: 'contents-tree-dashboard'
    });
  });
  function getAllNodes(data) {
    const ret = [];
    for(const dat of data) {
      if (dat.children && dat.children.length > 0) {
        ret.push(...getAllNodes(dat.children));
      }
      ret.push(dat.id);
    }
    return ret;
  }
  function searchTree() {
    const keyword = document.getElementById("treeKeyword").value;
    if (keyword === '') {
      $('#tree').tree('loadDataFromUrl', "{{baseUrl}}/api/contents/tree");
      $('#currentTreeKeywordText').text('');
      $('#currentTreeKeyword').addClass('d-none');
    } else {
      $('#tree').tree('loadDataFromUrl', "{{baseUrl}}/api/contents/tree?keyword=" + encodeURIComponent(keyword),null, ()=>{
        const data = $('#tree').tree('getTree').getData(true);
        for(const nodeid of getAllNodes(data)){
          if (nodeid){
            $('#tree').tree('openNode', $('#tree').tree('getNodeById', nodeid), false);
          }
        }
        $('#currentTreeKeywordText').text(keyword);
        $('#currentTreeKeyword').removeClass('d-none');
      });
    }
  }

  var tagData = {};
  var tagCloudObject = null;
  var selectedTags = localStorage.getItem('contents-tag-dashboard') ? JSON.parse(localStorage.getItem('contents-tag-dashboard')) : {};
  function clickTag(tagId){
    delete selectedTags[tagId];
    localStorage.setItem('contents-tag-dashboard', JSON.stringify(selectedTags));
    $(`#tags span[data-tag-id="${tagId}"]`).remove();
  }
  function addTag(tag){
    $("#tags").append(
      `<span class="badge text-bg-light" data-tag-id="${tag.id}" onclick="clickTag('${tag.id}')">${tag.name}</span> `
    );
  }
  function clickTagCloud(e){
    if (e.target.className === 'tagcloud--item') {
      const tagId = e.target.getAttribute('data-tag-id');
      if (selectedTags[tagId]) {
        // remove
        delete selectedTags[tagId];
        $(`#tags span[data-tag-id="${tagId}"]`).remove();
      } else {
        // add
        const tag = tagData[tagId];
        addTag(tag);
        selectedTags[tagId] = tag;
      }
      localStorage.setItem('contents-tag-dashboard', JSON.stringify(selectedTags));
    }
  }
  let lastTreeId = null;
  function loadTagCloud(){
    const selected = $('#tree').tree('getSelectedNode');
    const selectedId = selected ? selected.id : '';
    $.ajax({
      url: "{{baseUrl}}/api/contents/tagcloud?treeId=" + encodeURIComponent(selectedId),
      method: "GET",
      success: (data) => {
        if (tagCloudObject) {
          tagCloudObject.destroy();
          tagCloudObject = null;
        }
        if (lastTreeId !== null && lastTreeId !== selectedId) {
          $(`#tags span`).remove();
          selectedTags = {};
          localStorage.setItem('contents-tag-dashboard', JSON.stringify(selectedTags));
        }
        lastTreeId = selectedId;
        tagData = {};
        if (data.length === 0) {
          $("#tagcloud").addClass("d-none");
          $("#noTags").removeClass("d-none");
          return;
        } else {
          $("#tagcloud").removeClass("d-none");
          $("#noTags").addClass("d-none");
        }
        let tagSizeMax = 1;
        for (const tag of data) {
          if (tag.count > tagSizeMax) {
            tagSizeMax = tag.count;
          }
        }
        var tagSize = function(count){
          return Math.ceil((count-1) / tagSizeMax * 52) + 12;
        }
        const items = [];
        for (const tag of data) {
          const tagItem = $("<span>").addClass("tagcloud--item").attr('data-tag-id', tag.tag_id).text(tag.display_name);
          tagItem.css("font-size", tagSize(tag.count) + "px");
          items.push(tagItem[0].outerHTML);
          tagData[tag.tag_id] = {
            id: tag.tag_id,
            name: tag.display_name,
            count: tag.count
          };
          if (selectedTags[tag.tag_id]) {
            addTag(tagData[tag.tag_id]);
          }
        }
        tagCloudObject = TagCloud('#tagcloud', items, {
          radius: 50,
          maxSpeed: 'normal',
          initSpeed: 'normal',
          direction: 135,
          keep: true,
          useContainerInlineStyles: true,
          useItemInlineStyles: true,
          containerClass: 'tagcloud',
          itemClass: 'tagcloud--item',
          useHTML: true
       });
      }
    });
  }
  function makeBreadcrumb(){
    const breadcrumbList = $("#breadcrumbList");
    breadcrumbList.empty();
    let selectedNode = $('#tree').tree('getSelectedNode');
    const ary = [];
    if (selectedNode) {
      do{
        const item = $("<li>").addClass("breadcrumb-item").html(
          `<a href="#" onclick="$('#tree').tree('selectNode', $('#tree').tree('getNodeById', '${selectedNode.id}'));">${selectedNode.name}</a>`
        );
        ary.unshift(item);
        selectedNode = selectedNode.parent;
      }while(selectedNode.parent);
      ary[ary.length - 1].addClass("active");
      ary[ary.length - 1].text(ary[ary.length - 1].text());
    }else{
      const item = $("<li>").addClass("breadcrumb-item active").text("{{ __ "page.contents.breadcrumb.root" }}");
      ary.push(item);
    }
    breadcrumbList.append(ary);
  }

  addEventListener("load", (event) => {
    $("#tree").on(
      'tree.select',
      function(event) {
        loadTagCloud();
        makeBreadcrumb();
      }
    );
    $("#tree").on(
      'tree.init',
      function() {
        loadTagCloud();
        makeBreadcrumb();
      }
    );
    $("#tagcloud")[0].addEventListener("click", clickTagCloud);
  });
</script>

<div class="container-fluid">
  <div class="row">
    <div class="col-md-2 leftmenu">
      <div class="row">
        <div class="col align-items-center">
          <div id="tagcloud" class="tagcloud"></div> 
          <div id="noTags" class="d-none">{{ __ "page.contents.tagCloud.noTags" }}</div>
        </div>
      </div>
      <div id="treeviewArea">
        <div class="input-group">
          <input type="text" id="treeKeyword" class="form-control form-control-sm" placeholder="{{ __ 'page.contents.tree.search' }}" aria-label="Search" aria-describedby="button-addon2" onkeyup="if($('#treeKeyword').val() === '' || event.key === 'Enter'){ searchTree(); }">
          <button class="btn btn-outline-secondary btn-sm" type="button" onclick="searchTree()">{{ __ 'page.contents.tree.searchButton' }}</button>
        </div>
        <div id="currentTreeKeyword" class="d-none">
          <span class="">{{ __ 'page.contents.tree.searchWord' }}</span>:<span id="currentTreeKeywordText"></span>
        </div>
        <div id="tree" data-url="{{baseUrl}}/api/contents/tree"></div>
      </div>
    </div>
    <div class="col-md-10">
      {{#if false}}
      <nav style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='%236c757d'/%3E%3C/svg%3E&#34;);" aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item active"><a href="{{baseUrl}}/contents">Dashboard</a></li>
        </ol>
      </nav>
      {{/if}}
      <div class="row">
        <div class="col-md-6">
          <nav id="breadcrumb" aria-label="breadcrumb">
            <ol id="breadcrumbList" class="breadcrumb">
            </ol>
          </nav>
        </div>
        <div class="col-md-6 text-end">
          <div id="tags">

          </div>
      </div>
      <section id="main_section">
        <div id="contentArea">
          <!-- Content will be loaded here -->
          Contents
        </div>
      </section>
    </div>
  </div> <!-- row -->
</div>

{{> footer }}
